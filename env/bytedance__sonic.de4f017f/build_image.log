#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 204B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/golang:1.24
#2 DONE 0.3s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/5] FROM docker.io/library/golang:1.24@sha256:14fd8a55e59a560704e5fc44970b301d00d344e45d6b914dda228e09f359a088
#4 CACHED

#5 [2/5] RUN git clone https://github.com/swesmith/bytedance__sonic.de4f017f /testbed
#5 0.152 Cloning into '/testbed'...
#5 2.843 Updating files:  63% (40256/62904)Updating files:  64% (40259/62904)Updating files:  65% (40888/62904)Updating files:  66% (41517/62904)Updating files:  67% (42146/62904)Updating files:  68% (42775/62904)Updating files:  69% (43404/62904)Updating files:  70% (44033/62904)Updating files:  71% (44662/62904)Updating files:  72% (45291/62904)Updating files:  73% (45920/62904)Updating files:  74% (46549/62904)Updating files:  75% (47178/62904)Updating files:  76% (47808/62904)Updating files:  77% (48437/62904)Updating files:  78% (49066/62904)Updating files:  79% (49695/62904)Updating files:  80% (50324/62904)Updating files:  81% (50953/62904)Updating files:  82% (51582/62904)Updating files:  83% (52211/62904)Updating files:  84% (52840/62904)Updating files:  85% (53469/62904)Updating files:  86% (54098/62904)Updating files:  87% (54727/62904)Updating files:  88% (55356/62904)Updating files:  89% (55985/62904)Updating files:  90% (56614/62904)Updating files:  91% (57243/62904)Updating files:  92% (57872/62904)Updating files:  93% (58501/62904)Updating files:  94% (59130/62904)Updating files:  95% (59759/62904)Updating files:  96% (60388/62904)Updating files:  97% (61017/62904)Updating files:  98% (61646/62904)Updating files:  99% (62275/62904)Updating files: 100% (62904/62904)Updating files: 100% (62904/62904), done.
#5 DONE 6.0s

#6 [3/5] WORKDIR /testbed
#6 DONE 0.0s

#7 [4/5] RUN go mod tidy
#7 0.200 go: downloading github.com/stretchr/testify v1.8.1
#7 0.205 go: downloading github.com/davecgh/go-spew v1.1.1
#7 0.205 go: downloading github.com/twitchyliquid64/golang-asm v0.15.1
#7 0.205 go: downloading github.com/bytedance/sonic/loader v0.2.5-0.20250615173055-5c2186ca22ef
#7 0.223 go: downloading github.com/klauspost/cpuid/v2 v2.0.9
#7 0.228 go: downloading github.com/cloudwego/base64x v0.1.5
#7 0.285 go: downloading golang.org/x/arch v0.0.0-20210923205945-b76863e36670
#7 0.327 go: downloading github.com/pmezard/go-difflib v1.0.0
#7 0.327 go: downloading gopkg.in/yaml.v3 v3.0.1
#7 0.446 go: downloading gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405
#7 DONE 0.6s

#8 [5/5] RUN go test -v -count=1 ./... || true
#8 0.463 go: downloading github.com/stretchr/testify v1.10.0
#8 14.28 Begin GC looping...
#8 14.28 === RUN   TestValid
#8 14.28 --- PASS: TestValid (0.00s)
#8 14.28 === RUN   TestIdent
#8 14.28 --- PASS: TestIdent (0.00s)
#8 14.28 === RUN   TestCompatUnmarshalStd
#8 14.28 --- PASS: TestCompatUnmarshalStd (0.01s)
#8 14.28 === RUN   TestCompatMarshalStd
#8 14.28 === PAUSE TestCompatMarshalStd
#8 14.28 === RUN   TestCompatEncoderStd
#8 14.28 --- PASS: TestCompatEncoderStd (0.00s)
#8 14.28 === RUN   TestCompatDecoderStd
#8 14.28 --- PASS: TestCompatDecoderStd (0.00s)
#8 14.28 === RUN   TestPretouch
#8 14.28 --- PASS: TestPretouch (0.01s)
#8 14.28 === RUN   TestGet
#8 14.28 --- PASS: TestGet (0.00s)
#8 14.28 === RUN   TestUnmarshalWithTrailingChars
#8 14.28 --- PASS: TestUnmarshalWithTrailingChars (0.00s)
#8 14.28 === RUN   TestMarshal
#8 14.28 --- PASS: TestMarshal (0.03s)
#8 14.28 === RUN   TestMarshalNumberZeroVal
#8 14.28 --- PASS: TestMarshalNumberZeroVal (0.00s)
#8 14.28 === RUN   TestMarshalEmbeds
#8 14.28 --- PASS: TestMarshalEmbeds (0.00s)
#8 14.28 === RUN   TestUnmarshal
#8 14.28 --- PASS: TestUnmarshal (0.42s)
#8 14.28 === RUN   TestUnmarshalMarshal
#8 14.28 --- PASS: TestUnmarshalMarshal (0.04s)
#8 14.28 === RUN   TestNumberAccessors
#8 14.28 --- PASS: TestNumberAccessors (0.00s)
#8 14.28 === RUN   TestLargeByteSlice
#8 14.28 --- PASS: TestLargeByteSlice (0.00s)
#8 14.28 === RUN   TestUnmarshalPtrPtr
#8 14.28 --- PASS: TestUnmarshalPtrPtr (0.00s)
#8 14.28 === RUN   TestRefUnmarshal
#8 14.28 --- PASS: TestRefUnmarshal (0.00s)
#8 14.28 === RUN   TestEmptyString
#8 14.28 Mismatch type string with value string "at index 27: mismatched type with value\n\n\t\"1\", \"Number2\":\"\",\"Pass\":\"true\"}\n\t................^...............\n"
#8 14.28 --- PASS: TestEmptyString (0.00s)
#8 14.28 === RUN   TestNullString
#8 14.28 --- PASS: TestNullString (0.00s)
#8 14.28 === RUN   TestUnmarshalNulls
#8 14.28 --- PASS: TestUnmarshalNulls (0.01s)
#8 14.28 === RUN   TestStringKind
#8 14.28 --- PASS: TestStringKind (0.00s)
#8 14.28 === RUN   TestByteKind
#8 14.28 --- PASS: TestByteKind (0.00s)
#8 14.28 === RUN   TestSliceOfCustomByte
#8 14.28 --- PASS: TestSliceOfCustomByte (0.00s)
#8 14.28 === RUN   TestUnmarshalTypeError
#8 14.28 --- PASS: TestUnmarshalTypeError (0.00s)
#8 14.28 === RUN   TestMismatchTypeError
#8 14.28 --- PASS: TestMismatchTypeError (0.00s)
#8 14.28 === RUN   TestUnmarshalSyntax
#8 14.28 --- PASS: TestUnmarshalSyntax (0.00s)
#8 14.28 === RUN   TestUnmarshalUnexported
#8 14.28 --- PASS: TestUnmarshalUnexported (0.00s)
#8 14.28 === RUN   TestUnmarshalJSONLiteralError
#8 14.28 --- PASS: TestUnmarshalJSONLiteralError (0.00s)
#8 14.28 === RUN   TestSkipArrayObjects
#8 14.28 --- PASS: TestSkipArrayObjects (0.00s)
#8 14.28 === RUN   TestPrefilled
#8 14.28 --- PASS: TestPrefilled (0.01s)
#8 14.28 === RUN   TestInvalidUnmarshal
#8 14.28 --- PASS: TestInvalidUnmarshal (0.00s)
#8 14.28 === RUN   TestInvalidUnmarshalText
#8 14.28 --- PASS: TestInvalidUnmarshalText (0.00s)
#8 14.28 === RUN   TestInvalidStringOption
#8 14.28 --- PASS: TestInvalidStringOption (0.01s)
#8 14.28 === RUN   TestUnmarshalErrorAfterMultipleJSON
#8 14.28 --- PASS: TestUnmarshalErrorAfterMultipleJSON (0.00s)
#8 14.28 === RUN   TestUnmarshalPanic
#8 14.28 --- PASS: TestUnmarshalPanic (0.00s)
#8 14.28 === RUN   TestUnmarshalRecursivePointer
#8 14.28 --- PASS: TestUnmarshalRecursivePointer (0.00s)
#8 14.28 === RUN   TestUnmarshalMapWithTextUnmarshalerStringKey
#8 14.28 --- PASS: TestUnmarshalMapWithTextUnmarshalerStringKey (0.00s)
#8 14.28 === RUN   TestUnmarshalRescanLiteralMangledUnquote
#8 14.28 --- PASS: TestUnmarshalRescanLiteralMangledUnquote (0.01s)
#8 14.28 === RUN   TestUnmarshalMaxDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/unstructured-ArrayUnderMaxNestingDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/typed_named_field-ArrayUnderMaxNestingDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/typed_missing_field-ArrayUnderMaxNestingDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/custom_unmarshaler-ArrayUnderMaxNestingDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/unstructured-ArrayOverMaxNestingDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/typed_named_field-ArrayOverMaxNestingDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/typed_missing_field-ArrayOverMaxNestingDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/custom_unmarshaler-ArrayOverMaxNestingDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/unstructured-ArrayOverStackDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/typed_named_field-ArrayOverStackDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/typed_missing_field-ArrayOverStackDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/custom_unmarshaler-ArrayOverStackDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/unstructured-ObjectUnderMaxNestingDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/typed_named_field-ObjectUnderMaxNestingDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/typed_missing_field-ObjectUnderMaxNestingDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/custom_unmarshaler-ObjectUnderMaxNestingDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/unstructured-ObjectOverMaxNestingDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/typed_named_field-ObjectOverMaxNestingDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/typed_missing_field-ObjectOverMaxNestingDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/custom_unmarshaler-ObjectOverMaxNestingDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/unstructured-ObjectOverStackDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/typed_named_field-ObjectOverStackDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/typed_missing_field-ObjectOverStackDepth
#8 14.28 === RUN   TestUnmarshalMaxDepth/custom_unmarshaler-ObjectOverStackDepth
#8 14.28 --- PASS: TestUnmarshalMaxDepth (0.15s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/unstructured-ArrayUnderMaxNestingDepth (0.00s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/typed_named_field-ArrayUnderMaxNestingDepth (0.00s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/typed_missing_field-ArrayUnderMaxNestingDepth (0.00s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/custom_unmarshaler-ArrayUnderMaxNestingDepth (0.00s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/unstructured-ArrayOverMaxNestingDepth (0.00s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/typed_named_field-ArrayOverMaxNestingDepth (0.00s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/typed_missing_field-ArrayOverMaxNestingDepth (0.00s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/custom_unmarshaler-ArrayOverMaxNestingDepth (0.00s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/unstructured-ArrayOverStackDepth (0.01s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/typed_named_field-ArrayOverStackDepth (0.01s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/typed_missing_field-ArrayOverStackDepth (0.00s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/custom_unmarshaler-ArrayOverStackDepth (0.01s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/unstructured-ObjectUnderMaxNestingDepth (0.00s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/typed_named_field-ObjectUnderMaxNestingDepth (0.00s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/typed_missing_field-ObjectUnderMaxNestingDepth (0.00s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/custom_unmarshaler-ObjectUnderMaxNestingDepth (0.00s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/unstructured-ObjectOverMaxNestingDepth (0.00s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/typed_named_field-ObjectOverMaxNestingDepth (0.00s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/typed_missing_field-ObjectOverMaxNestingDepth (0.00s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/custom_unmarshaler-ObjectOverMaxNestingDepth (0.00s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/unstructured-ObjectOverStackDepth (0.02s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/typed_named_field-ObjectOverStackDepth (0.02s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/typed_missing_field-ObjectOverStackDepth (0.01s)
#8 14.28     --- PASS: TestUnmarshalMaxDepth/custom_unmarshaler-ObjectOverStackDepth (0.02s)
#8 14.28 === RUN   TestChangeTool
#8 14.28     decode_test.go:2561: sonic.ChargeToolPacingParamsForDataRead{Bucket2Item:map[int64]sonic.ChargeToolPacingBucketItemTcc{102:sonic.ChargeToolPacingBucketItemTcc{_:[128]uint8{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, T:"xxxx"}}}
#8 14.28     decode_test.go:2562: &map[int64]sonic.ChargeToolPacingBucketItemTcc{102:sonic.ChargeToolPacingBucketItemTcc{_:[128]uint8{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, T:"xxxx"}}
#8 14.28 --- PASS: TestChangeTool (0.01s)
#8 14.28 === RUN   TestDecoder_LongestInvalidUtf8
#8 14.28 --- PASS: TestDecoder_LongestInvalidUtf8 (0.00s)
#8 14.28 === RUN   TestDecoder_RandomInvalidUtf8
#8 14.28 --- PASS: TestDecoder_RandomInvalidUtf8 (0.13s)
#8 14.28 === RUN   TestDecodeFloat
#8 14.28 --- PASS: TestDecodeFloat (0.00s)
#8 14.28 === RUN   TestUseInt64
#8 14.28 --- PASS: TestUseInt64 (0.00s)
#8 14.28 === RUN   TestUseNumber
#8 14.28 --- PASS: TestUseNumber (0.00s)
#8 14.28 === RUN   TestJsonNumber
#8 14.28 --- PASS: TestJsonNumber (0.00s)
#8 14.28 === RUN   TestOmitEmpty
#8 14.28 --- PASS: TestOmitEmpty (0.01s)
#8 14.28 === RUN   TestRoundtripStringTag
#8 14.28 === RUN   TestRoundtripStringTag/AllTypes
#8 14.28 === RUN   TestRoundtripStringTag/StringDoubleEscapes
#8 14.28 --- PASS: TestRoundtripStringTag (0.01s)
#8 14.28     --- PASS: TestRoundtripStringTag/AllTypes (0.01s)
#8 14.28     --- PASS: TestRoundtripStringTag/StringDoubleEscapes (0.00s)
#8 14.28 === RUN   TestEncodeRenamedByteSlice
#8 14.28 --- PASS: TestEncodeRenamedByteSlice (0.00s)
#8 14.28 === RUN   TestSamePointerNoCycle
#8 14.28 --- PASS: TestSamePointerNoCycle (0.00s)
#8 14.28 === RUN   TestSliceNoCycle
#8 14.28 --- PASS: TestSliceNoCycle (0.00s)
#8 14.28 === RUN   TestUnsupportedValues
#8 14.28 --- PASS: TestUnsupportedValues (0.02s)
#8 14.28 === RUN   TestRefValMarshal
#8 14.28 --- PASS: TestRefValMarshal (0.00s)
#8 14.28 === RUN   TestAnonymousFields
#8 14.28 === RUN   TestAnonymousFields/AmbiguousField
#8 14.28 === RUN   TestAnonymousFields/DominantField
#8 14.28 === RUN   TestAnonymousFields/UnexportedEmbeddedInt
#8 14.28 === RUN   TestAnonymousFields/ExportedEmbeddedInt
#8 14.28 === RUN   TestAnonymousFields/UnexportedEmbeddedIntPointer
#8 14.28 === RUN   TestAnonymousFields/ExportedEmbeddedIntPointer
#8 14.28 === RUN   TestAnonymousFields/EmbeddedStruct
#8 14.28 === RUN   TestAnonymousFields/EmbeddedStructPointer
#8 14.28 === RUN   TestAnonymousFields/NestedStructAndInts
#8 14.28 === RUN   TestAnonymousFields/EmbeddedFieldBehindNilPointer
#8 14.28 --- PASS: TestAnonymousFields (0.01s)
#8 14.28     --- PASS: TestAnonymousFields/AmbiguousField (0.00s)
#8 14.28     --- PASS: TestAnonymousFields/DominantField (0.00s)
#8 14.28     --- PASS: TestAnonymousFields/UnexportedEmbeddedInt (0.00s)
#8 14.28     --- PASS: TestAnonymousFields/ExportedEmbeddedInt (0.00s)
#8 14.28     --- PASS: TestAnonymousFields/UnexportedEmbeddedIntPointer (0.00s)
#8 14.28     --- PASS: TestAnonymousFields/ExportedEmbeddedIntPointer (0.00s)
#8 14.28     --- PASS: TestAnonymousFields/EmbeddedStruct (0.00s)
#8 14.28     --- PASS: TestAnonymousFields/EmbeddedStructPointer (0.00s)
#8 14.28     --- PASS: TestAnonymousFields/NestedStructAndInts (0.00s)
#8 14.28     --- PASS: TestAnonymousFields/EmbeddedFieldBehindNilPointer (0.00s)
#8 14.28 === RUN   TestNilMarshal
#8 14.28 --- PASS: TestNilMarshal (0.01s)
#8 14.28 === RUN   TestEmbeddedBug
#8 14.28 --- PASS: TestEmbeddedBug (0.00s)
#8 14.28 === RUN   TestTaggedFieldDominates
#8 14.28 --- PASS: TestTaggedFieldDominates (0.00s)
#8 14.28 === RUN   TestDuplicatedFieldDisappears
#8 14.28 --- PASS: TestDuplicatedFieldDisappears (0.00s)
#8 14.28 === RUN   TestStdLibIssue10281
#8 14.28 --- PASS: TestStdLibIssue10281 (0.00s)
#8 14.28 === RUN   TestEncodePointerString
#8 14.28 --- PASS: TestEncodePointerString (0.00s)
#8 14.28 === RUN   TestEncodeString
#8 14.28 --- PASS: TestEncodeString (0.00s)
#8 14.28 === RUN   TestEncodeBytekind
#8 14.28 --- PASS: TestEncodeBytekind (0.01s)
#8 14.28 === RUN   TestNilMarshalerTextMapKey
#8 14.28 --- PASS: TestNilMarshalerTextMapKey (0.00s)
#8 14.28 === RUN   TestMarshalFloat
#8 14.28 === PAUSE TestMarshalFloat
#8 14.28 === RUN   TestMarshalRawMessageValue
#8 14.28 --- PASS: TestMarshalRawMessageValue (0.01s)
#8 14.28 === RUN   TestMarshalPanic
#8 14.28 --- PASS: TestMarshalPanic (0.00s)
#8 14.28 === RUN   TestMarshalUncommonFieldNames
#8 14.28 --- PASS: TestMarshalUncommonFieldNames (0.00s)
#8 14.28 === RUN   TestMarshalerError
#8 14.28 --- PASS: TestMarshalerError (0.00s)
#8 14.28 === RUN   TestMarshalNullNil
#8 14.28 --- PASS: TestMarshalNullNil (0.00s)
#8 14.28 === RUN   TestEncoder_LongestInvalidUtf8
#8 14.28 --- PASS: TestEncoder_LongestInvalidUtf8 (0.00s)
#8 14.28 === RUN   TestEncoder_RandomInvalidUtf8
#8 14.28 --- PASS: TestEncoder_RandomInvalidUtf8 (0.16s)
#8 14.28 === RUN   TestMarshalInfOrNan
#8 14.28 [null,null,null,null,null,null]
#8 14.28 [null,null,null]
#8 14.28 [null,null,null]
#8 14.28 --- PASS: TestMarshalInfOrNan (0.00s)
#8 14.28 === RUN   TestExampleSearch
#8 14.28 --- PASS: TestExampleSearch (0.00s)
#8 14.28 === RUN   TestExampleSearchEscapedKey
#8 14.28 --- PASS: TestExampleSearchEscapedKey (0.00s)
#8 14.28 === RUN   TestExampleSearchErr
#8 14.28 value not exists
#8 14.28 value not exists
#8 14.28 value not exists
#8 14.28 value not exists
#8 14.28 --- PASS: TestExampleSearchErr (0.00s)
#8 14.28 === RUN   TestExampleSearchEscapedKeyError
#8 14.28 value not exists
#8 14.28 value not exists
#8 14.28 value not exists
#8 14.28 "Syntax error at index 51: invalid char\n\n\t: [] ,\"y\\\\\\\"y\" :{ }, \"test\" : [ \n\t................^...............\n"
#8 14.28 --- PASS: TestExampleSearchEscapedKeyError (0.00s)
#8 14.28 === RUN   TestRandomData
#8 14.28 00000000  22 ef bf bd 2d 6d 70 ef  bf bd                    |"...-mp...|
#8 14.28 
#8 14.28 "�-mp�
#8 14.28 --- PASS: TestRandomData (0.53s)
#8 14.28 === RUN   TestRandomValidStrings
#8 14.28 --- PASS: TestRandomValidStrings (0.03s)
#8 14.28 === RUN   TestEmoji
#8 14.28 --- PASS: TestEmoji (0.00s)
#8 14.28 === RUN   TestEscapePath
#8 14.28 --- PASS: TestEscapePath (0.00s)
#8 14.28 === RUN   TestParseAny
#8 14.28 --- PASS: TestParseAny (0.00s)
#8 14.28 === RUN   TestTime
#8 14.28 --- PASS: TestTime (0.00s)
#8 14.28 === RUN   TestUnmarshalMap
#8 14.28 --- PASS: TestUnmarshalMap (0.00s)
#8 14.28 === RUN   TestSingleArrayValue
#8 14.28 --- PASS: TestSingleArrayValue (0.00s)
#8 14.28 === RUN   TestManyBasic
#8 14.28 
#8 14.28 
#8 14.28 
#8 14.28 
#8 14.28 
#8 14.28 
#8 14.28 
#8 14.28 
#8 14.28 --- PASS: TestManyBasic (0.00s)
#8 14.28 === RUN   TestNested
#8 14.28 === RUN   TestNested/SingleMany
#8 14.28 --- PASS: TestNested (0.00s)
#8 14.28     --- PASS: TestNested/SingleMany (0.00s)
#8 14.28 === RUN   TestMultiLevelFields
#8 14.28 === RUN   TestMultiLevelFields/SingleMany
#8 14.28 --- PASS: TestMultiLevelFields (0.00s)
#8 14.28     --- PASS: TestMultiLevelFields/SingleMany (0.00s)
#8 14.28 === RUN   TestRandomMany
#8 14.28 --- PASS: TestRandomMany (0.29s)
#8 14.28 === RUN   TestGetMany
#8 14.28 --- PASS: TestGetMany (0.00s)
#8 14.28 === RUN   TestGetMany2
#8 14.28 --- PASS: TestGetMany2 (0.00s)
#8 14.28 === RUN   TestNullArray
#8 14.28 --- PASS: TestNullArray (0.00s)
#8 14.28 === RUN   TestGetMany3
#8 14.28 --- PASS: TestGetMany3 (0.00s)
#8 14.28 === RUN   TestGetMany4
#8 14.28 --- PASS: TestGetMany4 (0.00s)
#8 14.28 === RUN   TestGetNotExist
#8 14.28 --- PASS: TestGetNotExist (0.00s)
#8 14.28 === RUN   TestUnescapedCharInString
#8 14.28 === RUN   TestUnescapedCharInString/Default
#8 14.28 === RUN   TestUnescapedCharInString/ValidateString
#8 14.28 --- PASS: TestUnescapedCharInString (0.00s)
#8 14.28     --- PASS: TestUnescapedCharInString/Default (0.00s)
#8 14.28     --- PASS: TestUnescapedCharInString/ValidateString (0.00s)
#8 14.28 === CONT  TestCompatMarshalStd
#8 14.28 === CONT  TestMarshalFloat
#8 14.28 --- PASS: TestCompatMarshalStd (0.00s)
#8 14.28 --- PASS: TestMarshalFloat (0.14s)
#8 14.28 PASS
#8 14.28 ok  	github.com/bytedance/sonic	2.159s
#8 15.77 Begin GC looping...
#8 15.77 === RUN   TestSortNodeTwitter
#8 15.77 --- PASS: TestSortNodeTwitter (0.01s)
#8 15.77 === RUN   TestNodeAny
#8 15.77 --- PASS: TestNodeAny (0.00s)
#8 15.77 === RUN   TestTypeCast2
#8 15.77 0 {Raw {34 0 0xc00001c350 <nil>} "" <nil>}
#8 15.77 --- PASS: TestTypeCast2 (0.00s)
#8 15.77 === RUN   TestStackAny
#8 15.77 any: ast.Node{t:34, l:0x0, p:(unsafe.Pointer)(0xc00020e070), m:(*sync.RWMutex)(nil)}
#8 15.77 finish GC
#8 15.77 finish marshal
#8 15.77 --- PASS: TestStackAny (0.00s)
#8 15.77 === RUN   Test_Export
#8 15.77 === RUN   Test_Export/bool
#8 15.77 === RUN   Test_Export/bool#01
#8 15.77 === RUN   Test_Export/number
#8 15.77 === RUN   Test_Export/number#01
#8 15.77 === RUN   Test_Export/string
#8 15.77 === RUN   Test_Export/string#01
#8 15.77 === RUN   Test_Export/object
#8 15.77 === RUN   Test_Export/object#01
#8 15.77 === RUN   Test_Export/array
#8 15.77 === RUN   Test_Export/array#01
#8 15.77 --- PASS: Test_Export (0.00s)
#8 15.77     --- PASS: Test_Export/bool (0.00s)
#8 15.77     --- PASS: Test_Export/bool#01 (0.00s)
#8 15.77     --- PASS: Test_Export/number (0.00s)
#8 15.77     --- PASS: Test_Export/number#01 (0.00s)
#8 15.77     --- PASS: Test_Export/string (0.00s)
#8 15.77     --- PASS: Test_Export/string#01 (0.00s)
#8 15.77     --- PASS: Test_Export/object (0.00s)
#8 15.77     --- PASS: Test_Export/object#01 (0.00s)
#8 15.77     --- PASS: Test_Export/array (0.00s)
#8 15.77     --- PASS: Test_Export/array#01 (0.00s)
#8 15.77 === RUN   Test_linkedPairs_Push
#8 15.77 === RUN   Test_linkedPairs_Push/add_empty
#8 15.77 === RUN   Test_linkedPairs_Push/add_one
#8 15.77 === RUN   Test_linkedPairs_Push/add__DEFAULT_NODE_CAP
#8 15.77 --- PASS: Test_linkedPairs_Push (0.00s)
#8 15.77     --- PASS: Test_linkedPairs_Push/add_empty (0.00s)
#8 15.77     --- PASS: Test_linkedPairs_Push/add_one (0.00s)
#8 15.77     --- PASS: Test_linkedPairs_Push/add__DEFAULT_NODE_CAP (0.00s)
#8 15.77 === RUN   Test_linkedNodes_Push
#8 15.77 === RUN   Test_linkedNodes_Push/add_empty
#8 15.77 === RUN   Test_linkedNodes_Push/add_one
#8 15.77 === RUN   Test_linkedNodes_Push/add__DEFAULT_NODE_CAP
#8 15.77 --- PASS: Test_linkedNodes_Push (0.00s)
#8 15.77     --- PASS: Test_linkedNodes_Push/add_empty (0.00s)
#8 15.77     --- PASS: Test_linkedNodes_Push/add_one (0.00s)
#8 15.77     --- PASS: Test_linkedNodes_Push/add__DEFAULT_NODE_CAP (0.00s)
#8 15.77 === RUN   Test_linkedNodes_Pop
#8 15.77 === RUN   Test_linkedNodes_Pop/remove_empty
#8 15.77 === RUN   Test_linkedNodes_Pop/remove_one
#8 15.77 === RUN   Test_linkedNodes_Pop/add__DEFAULT_NODE_CAP
#8 15.77 --- PASS: Test_linkedNodes_Pop (0.00s)
#8 15.77     --- PASS: Test_linkedNodes_Pop/remove_empty (0.00s)
#8 15.77     --- PASS: Test_linkedNodes_Pop/remove_one (0.00s)
#8 15.77     --- PASS: Test_linkedNodes_Pop/add__DEFAULT_NODE_CAP (0.00s)
#8 15.77 === RUN   Test_linkedNodes_MoveOne
#8 15.77 === RUN   Test_linkedNodes_MoveOne/over_index
#8 15.77 === RUN   Test_linkedNodes_MoveOne/equal_index
#8 15.77 === RUN   Test_linkedNodes_MoveOne/forward_index
#8 15.77 === RUN   Test_linkedNodes_MoveOne/backward_index
#8 15.77 --- PASS: Test_linkedNodes_MoveOne (0.00s)
#8 15.77     --- PASS: Test_linkedNodes_MoveOne/over_index (0.00s)
#8 15.77     --- PASS: Test_linkedNodes_MoveOne/equal_index (0.00s)
#8 15.77     --- PASS: Test_linkedNodes_MoveOne/forward_index (0.00s)
#8 15.77     --- PASS: Test_linkedNodes_MoveOne/backward_index (0.00s)
#8 15.77 === RUN   Test_DecodeString
#8 15.77 false
#8 15.77 === RUN   Test_DecodeString/empty
#8 15.77 === RUN   Test_DecodeString/one
#8 15.77 === RUN   Test_DecodeString/escape
#8 15.77 === RUN   Test_DecodeString/escape#01
#8 15.77 === RUN   Test_DecodeString/uft8
#8 15.77 === RUN   Test_DecodeString/uft8#01
#8 15.77 === RUN   Test_DecodeString/invalid_uft8
#8 15.77 === RUN   Test_DecodeString/invalid_escape
#8 15.77 === RUN   Test_DecodeString/invalid_escape#01
#8 15.77 === RUN   Test_DecodeString/invalid_string
#8 15.77 === RUN   Test_DecodeString/invalid_string#01
#8 15.77 --- PASS: Test_DecodeString (0.00s)
#8 15.77     --- PASS: Test_DecodeString/empty (0.00s)
#8 15.77     --- PASS: Test_DecodeString/one (0.00s)
#8 15.77     --- PASS: Test_DecodeString/escape (0.00s)
#8 15.77     --- PASS: Test_DecodeString/escape#01 (0.00s)
#8 15.77     --- PASS: Test_DecodeString/uft8 (0.00s)
#8 15.77     --- PASS: Test_DecodeString/uft8#01 (0.00s)
#8 15.77     --- PASS: Test_DecodeString/invalid_uft8 (0.00s)
#8 15.77     --- PASS: Test_DecodeString/invalid_escape (0.00s)
#8 15.77     --- PASS: Test_DecodeString/invalid_escape#01 (0.00s)
#8 15.77     --- PASS: Test_DecodeString/invalid_string (0.00s)
#8 15.77     --- PASS: Test_DecodeString/invalid_string#01 (0.00s)
#8 15.77 === RUN   TestGC_Encode
#8 15.77 --- PASS: TestGC_Encode (0.47s)
#8 15.77 === RUN   TestEncodeValue
#8 15.77     encode_test.go:108: 0
#8 15.77     encode_test.go:108: 1
#8 15.77     encode_test.go:108: 2
#8 15.77     encode_test.go:108: 3
#8 15.77     encode_test.go:108: 4
#8 15.77     encode_test.go:108: 5
#8 15.77     encode_test.go:108: 6
#8 15.77     encode_test.go:108: 7
#8 15.77     encode_test.go:108: 8
#8 15.77     encode_test.go:108: 9
#8 15.77     encode_test.go:108: 10
#8 15.77     encode_test.go:108: 11
#8 15.77     encode_test.go:108: 12
#8 15.77     encode_test.go:108: 13
#8 15.77     encode_test.go:108: 14
#8 15.77     encode_test.go:108: 15
#8 15.77     encode_test.go:108: 16
#8 15.77     encode_test.go:108: 17
#8 15.77     encode_test.go:108: 18
#8 15.77 --- PASS: TestEncodeValue (0.02s)
#8 15.77 === RUN   TestEncodeNode
#8 15.77 --- PASS: TestEncodeNode (0.00s)
#8 15.77 === RUN   TestMarshalSort
#8 15.77 --- PASS: TestMarshalSort (0.00s)
#8 15.77 === RUN   TestEncodeNone
#8 15.77 --- PASS: TestEncodeNone (0.00s)
#8 15.77 === RUN   TestGetFromEmptyJson
#8 15.77 === RUN   TestGetFromEmptyJson/#00
#8 15.77 === RUN   TestGetFromEmptyJson/#01
#8 15.77 === RUN   TestGetFromEmptyJson/#02
#8 15.77 === RUN   TestGetFromEmptyJson/#03
#8 15.77 === RUN   TestGetFromEmptyJson/#04
#8 15.77 --- PASS: TestGetFromEmptyJson (0.00s)
#8 15.77     --- PASS: TestGetFromEmptyJson/#00 (0.00s)
#8 15.77     --- PASS: TestGetFromEmptyJson/#01 (0.00s)
#8 15.77     --- PASS: TestGetFromEmptyJson/#02 (0.00s)
#8 15.77     --- PASS: TestGetFromEmptyJson/#03 (0.00s)
#8 15.77     --- PASS: TestGetFromEmptyJson/#04 (0.00s)
#8 15.77 === RUN   TestGetFromSyntaxError
#8 15.77 === RUN   TestGetFromSyntaxError/_____
#8 15.77 === RUN   TestGetFromSyntaxError/123.
#8 15.77 === RUN   TestGetFromSyntaxError/+124
#8 15.77 === RUN   TestGetFromSyntaxError/-
#8 15.77 === RUN   TestGetFromSyntaxError/-e123
#8 15.77 === RUN   TestGetFromSyntaxError/-1.e123
#8 15.77 === RUN   TestGetFromSyntaxError/-12e456.1
#8 15.77 === RUN   TestGetFromSyntaxError/-12e.1
#8 15.77 === RUN   TestGetFromSyntaxError/[
#8 15.77 === RUN   TestGetFromSyntaxError/{
#8 15.77 === RUN   TestGetFromSyntaxError/[}
#8 15.77 === RUN   TestGetFromSyntaxError/{]
#8 15.77 === RUN   TestGetFromSyntaxError/{,}
#8 15.77 === RUN   TestGetFromSyntaxError/[,]
#8 15.77 === RUN   TestGetFromSyntaxError/tru
#8 15.77 === RUN   TestGetFromSyntaxError/fals
#8 15.77 === RUN   TestGetFromSyntaxError/nul
#8 15.77 === RUN   TestGetFromSyntaxError/{"a":"
#8 15.77 === RUN   TestGetFromSyntaxError/{"
#8 15.77 === RUN   TestGetFromSyntaxError/"
#8 15.77 === RUN   TestGetFromSyntaxError/"\"
#8 15.77 === RUN   TestGetFromSyntaxError/"\\\"
#8 15.77 === RUN   TestGetFromSyntaxError/"hello
#8 15.77 === RUN   TestGetFromSyntaxError/{{}}
#8 15.77 === RUN   TestGetFromSyntaxError/{[]}
#8 15.77 === RUN   TestGetFromSyntaxError/{:,}
#8 15.77 === RUN   TestGetFromSyntaxError/{test:error}
#8 15.77 === RUN   TestGetFromSyntaxError/{":true}
#8 15.77 === RUN   TestGetFromSyntaxError/{""_false}
#8 15.77 === RUN   TestGetFromSyntaxError/{_""_:_"false_}
#8 15.77 === RUN   TestGetFromSyntaxError/{"":"",}
#8 15.77 === RUN   TestGetFromSyntaxError/{_"_test_:_true}
#8 15.77 === RUN   TestGetFromSyntaxError/{_"test"_:_tru_}
#8 15.77 === RUN   TestGetFromSyntaxError/{_"test"_:_true_,_}
#8 15.77 === RUN   TestGetFromSyntaxError/{_{"test"_:_true_,_}_}
#8 15.77 === RUN   TestGetFromSyntaxError/{"test":1._}
#8 15.77 === RUN   TestGetFromSyntaxError/{"\\\""
#8 15.77 === RUN   TestGetFromSyntaxError/{"\\\"":
#8 15.77 === RUN   TestGetFromSyntaxError/{"\\\":",""}
#8 15.77 === RUN   TestGetFromSyntaxError/[{]
#8 15.77 === RUN   TestGetFromSyntaxError/[tru]
#8 15.77 === RUN   TestGetFromSyntaxError/[-1.]
#8 15.77 === RUN   TestGetFromSyntaxError/[[]
#8 15.77 === RUN   TestGetFromSyntaxError/[[],
#8 15.77 === RUN   TestGetFromSyntaxError/[_true_,_false_,_[_]
#8 15.77 === RUN   TestGetFromSyntaxError/[true,_false,_[],
#8 15.77 === RUN   TestGetFromSyntaxError/[true,_false,_[],]
#8 15.77 === RUN   TestGetFromSyntaxError/{"key":_[true,_false,_[]],_"key2":_{{}}
#8 15.77 --- PASS: TestGetFromSyntaxError (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/_____ (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/123. (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/+124 (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/- (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/-e123 (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/-1.e123 (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/-12e456.1 (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/-12e.1 (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/[ (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{ (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/[} (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{] (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{,} (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/[,] (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/tru (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/fals (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/nul (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{"a":" (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{" (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/" (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/"\" (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/"\\\" (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/"hello (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{{}} (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{[]} (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{:,} (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{test:error} (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{":true} (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{""_false} (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{_""_:_"false_} (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{"":"",} (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{_"_test_:_true} (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{_"test"_:_tru_} (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{_"test"_:_true_,_} (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{_{"test"_:_true_,_}_} (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{"test":1._} (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{"\\\"" (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{"\\\"": (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{"\\\":",""} (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/[{] (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/[tru] (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/[-1.] (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/[[] (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/[[], (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/[_true_,_false_,_[_] (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/[true,_false,_[], (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/[true,_false,_[],] (0.00s)
#8 15.77     --- PASS: TestGetFromSyntaxError/{"key":_[true,_false,_[]],_"key2":_{{}} (0.00s)
#8 15.77 === RUN   TestGetWithInvalidUndemandedField
#8 15.77 === RUN   TestGetWithInvalidUndemandedField/-0xyz
#8 15.77 === RUN   TestGetWithInvalidUndemandedField/-12e4xyz
#8 15.77 === RUN   TestGetWithInvalidUndemandedField/truex
#8 15.77 === RUN   TestGetWithInvalidUndemandedField/false,
#8 15.77 === RUN   TestGetWithInvalidUndemandedField/{"a":{,xxx},"b":true}
#8 15.77 === RUN   TestGetWithInvalidUndemandedField/{"a":[,xxx],"b":true}
#8 15.77 --- PASS: TestGetWithInvalidUndemandedField (0.00s)
#8 15.77     --- PASS: TestGetWithInvalidUndemandedField/-0xyz (0.00s)
#8 15.77     --- PASS: TestGetWithInvalidUndemandedField/-12e4xyz (0.00s)
#8 15.77     --- PASS: TestGetWithInvalidUndemandedField/truex (0.00s)
#8 15.77     --- PASS: TestGetWithInvalidUndemandedField/false, (0.00s)
#8 15.77     --- PASS: TestGetWithInvalidUndemandedField/{"a":{,xxx},"b":true} (0.00s)
#8 15.77     --- PASS: TestGetWithInvalidUndemandedField/{"a":[,xxx],"b":true} (0.00s)
#8 15.77 === RUN   TestGet_InvalidPathType
#8 15.77 --- PASS: TestGet_InvalidPathType (0.00s)
#8 15.77 === RUN   TestForEach
#8 15.77 {"array":[0,1,2], "object":{"k0":0,"k1":1,"k2":2}}
#8 15.77 --- PASS: TestForEach (0.00s)
#8 15.77 === RUN   TestRawIterator
#8 15.77 {"array":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15], "object":{"k0":0,"k1":1,"k2":2,"k3":3,"k4":4,"k5":5,"k6":6,"k7":7,"k8":8,"k9":9,"k10":10,"k11":11,"k12":12,"k13":13,"k14":14,"k15":15}}
#8 15.77 --- PASS: TestRawIterator (0.00s)
#8 15.77 === RUN   TestIterator
#8 15.77 {"array":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15], "object":{"k0":0,"k1":1,"k2":2,"k3":3,"k4":4,"k5":5,"k6":6,"k7":7,"k8":8,"k9":9,"k10":10,"k11":11,"k12":12,"k13":13,"k14":14,"k15":15}}
#8 15.77 --- PASS: TestIterator (0.00s)
#8 15.77 === RUN   TestExist
#8 15.77 --- PASS: TestExist (0.00s)
#8 15.77 === RUN   TestNodeSortKeys
#8 15.77 --- PASS: TestNodeSortKeys (0.00s)
#8 15.77 === RUN   TestNodeSortKeys2
#8 15.77 === RUN   TestNodeSortKeys2/single
#8 15.77 === RUN   TestNodeSortKeys2/recurse
#8 15.77 --- PASS: TestNodeSortKeys2 (0.00s)
#8 15.77     --- PASS: TestNodeSortKeys2/single (0.00s)
#8 15.77     --- PASS: TestNodeSortKeys2/recurse (0.00s)
#8 15.77 === RUN   TestLoadAll
#8 15.77 --- PASS: TestLoadAll (0.00s)
#8 15.77 === RUN   TestIndexPair
#8 15.77 --- PASS: TestIndexPair (0.00s)
#8 15.77 === RUN   TestIndexOrGet
#8 15.77 --- PASS: TestIndexOrGet (0.00s)
#8 15.77 === RUN   TestIndexOrGetWithIdx
#8 15.77 --- PASS: TestIndexOrGetWithIdx (0.00s)
#8 15.77 === RUN   TestTypeCast
#8 15.77 0 {Interface {0 0 <nil> <nil>} <nil> 0xc000336000}
#8 15.77 1 {Interface {33 1 0x9fa940 <nil>} 1 <nil>}
#8 15.77 2 {Interface {34 0 0xc0004a4170 <nil>} 1 <nil>}
#8 15.77 3 {Interface {33 1 0x9fa940 <nil>} 1 <nil>}
#8 15.77 4 {InterfaceUseNode {0 0 <nil> <nil>} {0 0 <nil> <nil>} <nil>}
#8 15.77 5 {InterfaceUseNode {34 0 0xc0004a4150 <nil>} {34 0 0xc0004a4150 <nil>} <nil>}
#8 15.77 6 {InterfaceUseNode {33 1 0x9fa940 <nil>} {33 1 0x9fa940 <nil>} <nil>}
#8 15.77 7 {InterfaceUseNumber {0 0 <nil> <nil>} <nil> 0xc000336000}
#8 15.77 8 {InterfaceUseNumber {34 0 0xc0004a4180 <nil>} 1 <nil>}
#8 15.77 9 {InterfaceUseNumber {33 1 0x9fa940 <nil>} 1 <nil>}
#8 15.77 10 {Map {0 0 <nil> <nil>} map[] 0xc000336000}
#8 15.77 11 {Map {34 0 0xc0004a4190 <nil>} map[] 0xc000336000}
#8 15.77 12 {Map {34 0 0xc0004a41a0 <nil>} map[a:1] <nil>}
#8 15.77 13 {Map {6 1 0xc00021e808 <nil>} map[a:1] <nil>}
#8 15.77 14 {MapUseNode {0 0 <nil> <nil>} map[] 0xc000336000}
#8 15.77 15 {MapUseNode {34 0 0xc0004a41b0 <nil>} map[] 0xc000336000}
#8 15.77 16 {MapUseNode {34 0 0xc0004a41c0 <nil>} map[a:{33 1 0x9fa940 <nil>}] <nil>}
#8 15.77 17 {MapUseNode {6 1 0xc00021ec08 <nil>} map[a:{33 1 0x9fa940 <nil>}] <nil>}
#8 15.77 18 {MapUseNumber {0 0 <nil> <nil>} map[] 0xc000336000}
#8 15.77 19 {MapUseNumber {34 0 0xc0004a41d0 <nil>} map[a:1] <nil>}
#8 15.77 20 {MapUseNumber {6 1 0xc00021f008 <nil>} map[a:1] <nil>}
#8 15.77 21 {Array {0 0 <nil> <nil>} [] 0xc000336000}
#8 15.77 22 {Array {34 0 0xc0004a41e0 <nil>} [1] <nil>}
#8 15.77 23 {Array {5 1 0xc000228008 <nil>} [1] <nil>}
#8 15.77 24 {ArrayUseNode {0 0 <nil> <nil>} [] 0xc000336000}
#8 15.77 25 {ArrayUseNode {34 0 0xc0004a4200 <nil>} [] 0xc000336000}
#8 15.77 26 {ArrayUseNode {34 0 0xc0004a4220 <nil>} [{33 1 0x9fa940 <nil>}] <nil>}
#8 15.77 27 {ArrayUseNode {5 1 0xc000228248 <nil>} [{33 1 0x9fa940 <nil>}] <nil>}
#8 15.77 28 {ArrayUseNumber {0 0 <nil> <nil>} [] 0xc000336000}
#8 15.77 29 {ArrayUseNumber {34 0 0xc0004a4230 <nil>} [1] <nil>}
#8 15.77 30 {ArrayUseNumber {34 0 0xc0004a4250 <nil>} [] 0xc000336000}
#8 15.77 31 {ArrayUseNumber {5 1 0xc000228488 <nil>} [1] <nil>}
#8 15.77 32 {Raw {0 0 <nil> <nil>}  0xc00006bf60}
#8 15.77 33 {Raw {1 1 0xc0004a4270 <nil>}  0xc0004a4140}
#8 15.77 34 {Raw {261 3 0x92942f <nil>} [ ] <nil>}
#8 15.77 35 {Raw {261 3 0x927dfb <nil>} [ ] <nil>}
#8 15.77 36 {Raw {262 27 0x93e165 <nil>} { "a" : [ true, -1.2e34 ] } <nil>}
#8 15.77 37 {Raw {1 1 0xc0004a4280 <nil>}  0xc0004a4140}
#8 15.77 38 {Raw {1 2 0xc0004a4290 <nil>}  0xc0004a4140}
#8 15.77 39 {Raw {3 0 <nil> <nil>} true <nil>}
#8 15.77 40 {Raw {33 4 0x9285d7 <nil>} -0.0 <nil>}
#8 15.77 41 {Raw {7 0 <nil> <nil>} "" <nil>}
#8 15.77 42 {Raw {7 16 0xc0002861b0 <nil>} "aGVsbG8sIHdvcmxk" <nil>}
#8 15.77 43 {Bool {0 0 <nil> <nil>} false 0xc000336000}
#8 15.77 44 {Bool {34 0 0xc0004a42a0 <nil>} true <nil>}
#8 15.77 45 {Bool {34 0 0xc0004a42b0 <nil>} false <nil>}
#8 15.77 46 {Bool {34 0 0xc0004a42c0 <nil>} false <nil>}
#8 15.77 47 {Bool {34 0 0xc0004a42d0 <nil>} true <nil>}
#8 15.77 48 {Bool {34 0 0xc0004a42e0 <nil>} true <nil>}
#8 15.77 49 {Bool {34 0 0xc0004a42f0 <nil>} true <nil>}
#8 15.77 50 {Bool {34 0 0xc0004a4300 <nil>} true <nil>}
#8 15.77 51 {Bool {34 0 0xc0004a4310 <nil>} true <nil>}
#8 15.77 52 {Bool {34 0 0xc0004a4320 <nil>} true <nil>}
#8 15.77 53 {Bool {34 0 0xc0004a4330 <nil>} true <nil>}
#8 15.77 54 {Bool {34 0 0xc0004a4340 <nil>} true <nil>}
#8 15.77 55 {Bool {34 0 0xc0004a4350 <nil>} false <nil>}
#8 15.77 56 {Bool {34 0 0xc0004a4360 <nil>} true <nil>}
#8 15.77 57 {Bool {34 0 0xc0004a4370 <nil>} true <nil>}
#8 15.77 58 {Bool {34 0 0xc0004a4380 <nil>} false <nil>}
#8 15.77 59 {Bool {34 0 0xc0004a4390 <nil>} true <nil>}
#8 15.77 60 {Bool {34 0 0xc0004a43a0 <nil>} true <nil>}
#8 15.77 61 {Bool {34 0 0xc0004a43b0 <nil>} false 0xc0004a4140}
#8 15.77 62 {Bool {34 0 0xc0004a43c0 <nil>} false <nil>}
#8 15.77 63 {Bool {34 0 0xc0004a43d0 <nil>} true <nil>}
#8 15.77 64 {Bool {34 0 0xc0004a43e0 <nil>} false 0xc0004a4140}
#8 15.77 65 {Bool {259 4 0x9285bf <nil>} true <nil>}
#8 15.77 66 {Bool {260 5 0x9293c0 <nil>} false <nil>}
#8 15.77 67 {Bool {258 4 0x9285cf <nil>} false <nil>}
#8 15.77 68 {Bool {7 4 0x9285bf <nil>} true <nil>}
#8 15.77 69 {Bool {7 5 0x9293c0 <nil>} false <nil>}
#8 15.77 70 {Bool {7 0 <nil> <nil>} false 0xc0004a4140}
#8 15.77 71 {Bool {33 1 0x9fa750 <nil>} true <nil>}
#8 15.77 72 {Bool {33 4 0x928613 <nil>} true <nil>}
#8 15.77 73 {Bool {33 6 0x92a974 <nil>} false 0xc0004a4140}
#8 15.77 74 {StrictBool {4 0 <nil> <nil>} false <nil>}
#8 15.77 75 {StrictBool {3 0 <nil> <nil>} true <nil>}
#8 15.77 76 {StrictBool {258 4 0x9285cf <nil>} false 0xc000336000}
#8 15.77 77 {StrictBool {34 0 0xc0004a43f0 <nil>} true <nil>}
#8 15.77 78 {StrictBool {34 0 0xc0004a4400 <nil>} false <nil>}
#8 15.77 79 {StrictBool {34 0 0xc0004a4410 <nil>} false 0xc000336000}
#8 15.77 80 {Int64 {259 4 0x9285bf <nil>} 1 <nil>}
#8 15.77 81 {Int64 {260 5 0x9293c0 <nil>} 0 <nil>}
#8 15.77 82 {Int64 {263 3 0x927dd4 <nil>} 1 <nil>}
#8 15.77 83 {Int64 {263 5 0x929433 <nil>} 1 <nil>}
#8 15.77 84 {Int64 {263 5 0x929438 <nil>} 1 <nil>}
#8 15.77 85 {Int64 {33 4 0x928617 <nil>} 0 0xc0004a4140}
#8 15.77 86 {Int64 {34 0 0xc0004a4420 <nil>} 0 <nil>}
#8 15.77 87 {Int64 {34 0 0xc0004a4430 <nil>} 1 <nil>}
#8 15.77 88 {Int64 {34 0 0xc0004a4440 <nil>} 1 <nil>}
#8 15.77 89 {Int64 {34 0 0xc0004a4450 <nil>} 1 <nil>}
#8 15.77 90 {Int64 {34 0 0xc0004a4460 <nil>} 1 <nil>}
#8 15.77 91 {Int64 {34 0 0xc0004a4470 <nil>} 1 <nil>}
#8 15.77 92 {Int64 {34 0 0xc0004a4480 <nil>} 1 <nil>}
#8 15.77 93 {Int64 {34 0 0xc0004a4490 <nil>} 1 <nil>}
#8 15.77 94 {Int64 {34 0 0xc0004a44a0 <nil>} 1 <nil>}
#8 15.77 95 {Int64 {34 0 0xc0004a44b0 <nil>} 1 <nil>}
#8 15.77 96 {Int64 {34 0 0xc0004a44c0 <nil>} 1 <nil>}
#8 15.77 97 {Int64 {34 0 0xc0004a44d0 <nil>} 1 <nil>}
#8 15.77 98 {Int64 {34 0 0xc0004a44e0 <nil>} 1 <nil>}
#8 15.77 99 {Int64 {34 0 0xc0004a44f0 <nil>} 1 <nil>}
#8 15.77 100 {Int64 {34 0 0xc0004a4500 <nil>} 1 <nil>}
#8 15.77 101 {Int64 {34 0 0xc0004a4510 <nil>} 0 0xc0004a4140}
#8 15.77 102 {Int64 {34 0 0xc0004a4520 <nil>} 1 <nil>}
#8 15.77 103 {Int64 {34 0 0xc0004a4530 <nil>} 1 <nil>}
#8 15.77 104 {Int64 {34 0 0xc0004a4540 <nil>} 0 0xc0004a4140}
#8 15.77 105 {Int64 {34 0 0xc0004a4550 <nil>} 0 0xc000336000}
#8 15.77 106 {Int64 {0 0 <nil> <nil>} 0 0xc000336000}
#8 15.77 107 {Int64 {289 1 0x927ac1 <nil>} 0 <nil>}
#8 15.77 108 {Int64 {258 4 0x9285cf <nil>} 0 <nil>}
#8 15.77 109 {StrictInt64 {259 4 0x9285bf <nil>} 0 0xc000336000}
#8 15.77 110 {StrictInt64 {260 5 0x9293c0 <nil>} 0 0xc000336000}
#8 15.77 111 {StrictInt64 {34 0 0xc0004a4560 <nil>} 0 <nil>}
#8 15.77 112 {StrictInt64 {34 0 0xc0004a4570 <nil>} 0 <nil>}
#8 15.77 113 {StrictInt64 {34 0 0xc0004a4580 <nil>} 0 <nil>}
#8 15.77 114 {StrictInt64 {34 0 0xc0004a4590 <nil>} 0 <nil>}
#8 15.77 115 {StrictInt64 {34 0 0xc0004a45a0 <nil>} 0 <nil>}
#8 15.77 116 {StrictInt64 {34 0 0xc0004a45b0 <nil>} 0 <nil>}
#8 15.77 117 {StrictInt64 {34 0 0xc0004a45c0 <nil>} 0 <nil>}
#8 15.77 118 {StrictInt64 {34 0 0xc0004a45d0 <nil>} 0 <nil>}
#8 15.77 119 {StrictInt64 {34 0 0xc0004a45e0 <nil>} 0 <nil>}
#8 15.77 120 {StrictInt64 {0 0 <nil> <nil>} 0 0xc000336000}
#8 15.77 121 {StrictInt64 {289 1 0x927ac1 <nil>} 0 <nil>}
#8 15.77 122 {StrictInt64 {258 4 0x9285cf <nil>} 0 0xc000336000}
#8 15.77 123 {Float64 {259 4 0x9285bf <nil>} 1 <nil>}
#8 15.77 124 {Float64 {260 5 0x9293c0 <nil>} 0 <nil>}
#8 15.77 125 {Float64 {263 5 0x929438 <nil>} 1 <nil>}
#8 15.77 126 {Float64 {263 4 0x92861b <nil>} 0 0xc0004a4140}
#8 15.77 127 {Float64 {0 0 <nil> <nil>} 0 0xc000336000}
#8 15.77 128 {Float64 {34 0 0xc0004a45f0 <nil>} 0 <nil>}
#8 15.77 129 {Float64 {34 0 0xc0004a4600 <nil>} 1 <nil>}
#8 15.77 130 {Float64 {34 0 0xc0004a4610 <nil>} 1 <nil>}
#8 15.77 131 {Float64 {34 0 0xc0004a4620 <nil>} 1 <nil>}
#8 15.77 132 {Float64 {34 0 0xc0004a4630 <nil>} 1 <nil>}
#8 15.77 133 {Float64 {34 0 0xc0004a4640 <nil>} 1 <nil>}
#8 15.77 134 {Float64 {34 0 0xc0004a4650 <nil>} 1 <nil>}
#8 15.77 135 {Float64 {34 0 0xc0004a4660 <nil>} 1 <nil>}
#8 15.77 136 {Float64 {34 0 0xc0004a4670 <nil>} 1 <nil>}
#8 15.77 137 {Float64 {34 0 0xc0004a4680 <nil>} 1 <nil>}
#8 15.77 138 {Float64 {34 0 0xc0004a4690 <nil>} 1 <nil>}
#8 15.77 139 {Float64 {34 0 0xc0004a46a0 <nil>} 1 <nil>}
#8 15.77 140 {Float64 {34 0 0xc0004a46b0 <nil>} 1 <nil>}
#8 15.77 141 {Float64 {34 0 0xc0004a46c0 <nil>} 1.1 <nil>}
#8 15.77 142 {Float64 {34 0 0xc0004a46d0 <nil>} 0 0xc0004a4140}
#8 15.77 143 {Float64 {34 0 0xc0004a46e0 <nil>} 0 <nil>}
#8 15.77 144 {Float64 {34 0 0xc0004a46f0 <nil>} 0 0xc0004a4140}
#8 15.77 145 {Float64 {34 0 0xc0004a4700 <nil>} 0 0xc000336000}
#8 15.77 146 {Float64 {289 3 0x927ddd <nil>} 0 <nil>}
#8 15.77 147 {Float64 {289 1 0x9fa940 <nil>} 1 <nil>}
#8 15.77 148 {Float64 {258 4 0x9285cf <nil>} 0 <nil>}
#8 15.77 149 {StrictFloat64 {259 4 0x9285bf <nil>} 0 0xc000336000}
#8 15.77 150 {StrictFloat64 {260 5 0x9293c0 <nil>} 0 0xc000336000}
#8 15.77 151 {StrictFloat64 {0 0 <nil> <nil>} 0 0xc000336000}
#8 15.77 152 {StrictFloat64 {34 0 0xc0004a4710 <nil>} 0 <nil>}
#8 15.77 153 {StrictFloat64 {34 0 0xc0004a4720 <nil>} 0 <nil>}
#8 15.77 154 {StrictFloat64 {289 3 0x927ddd <nil>} 0 <nil>}
#8 15.77 155 {StrictFloat64 {258 4 0x9285cf <nil>} 0 0xc000336000}
#8 15.77 156 {Number {0 0 <nil> <nil>}  0xc000336000}
#8 15.77 157 {Number {34 0 0xc0004a4730 <nil>} 0 <nil>}
#8 15.77 158 {Number {34 0 0xc0004a4740 <nil>} 1 <nil>}
#8 15.77 159 {Number {34 0 0xc0004a4750 <nil>} 1 <nil>}
#8 15.77 160 {Number {34 0 0xc0004a4760 <nil>} 1 <nil>}
#8 15.77 161 {Number {34 0 0xc0004a4770 <nil>} 1 <nil>}
#8 15.77 162 {Number {34 0 0xc0004a4780 <nil>} 1 <nil>}
#8 15.77 163 {Number {34 0 0xc0004a4790 <nil>} 1 <nil>}
#8 15.77 164 {Number {34 0 0xc0004a47a0 <nil>} 1 <nil>}
#8 15.77 165 {Number {34 0 0xc0004a47b0 <nil>} 1 <nil>}
#8 15.77 166 {Number {34 0 0xc0004a47c0 <nil>} 1 <nil>}
#8 15.77 167 {Number {34 0 0xc0004a47d0 <nil>} 1 <nil>}
#8 15.77 168 {Number {34 0 0xc0004a47e0 <nil>} 1 <nil>}
#8 15.77 169 {Number {34 0 0xc0004a47f0 <nil>} 1 <nil>}
#8 15.77 170 {Number {34 0 0xc0004a4800 <nil>} 1.1 <nil>}
#8 15.77 171 {Number {34 0 0xc0004a4810 <nil>}  0xc0004a4140}
#8 15.77 172 {Number {34 0 0xc0004a4820 <nil>} 0 <nil>}
#8 15.77 173 {Number {34 0 0xc0004a4830 <nil>} x <nil>}
#8 15.77 174 {Number {34 0 0xc0004a4840 <nil>} +1x.1 <nil>}
#8 15.77 175 {Number {34 0 0xc0004a4850 <nil>}  0xc000336000}
#8 15.77 176 {Number {1 2 0xc0004a4860 <nil>}  0xc0004a4140}
#8 15.77 177 {Number {289 3 0x927ddd <nil>} 0.0 <nil>}
#8 15.77 178 {Number {263 3 0x927dd4 <nil>} 1 <nil>}
#8 15.77 179 {Number {263 5 0x929433 <nil>} 1.1 <nil>}
#8 15.77 180 {Number {263 6 0x92a97a <nil>}  0xc0004a4140}
#8 15.77 181 {Number {1 2 0xc0004a4870 <nil>}  0xc0004a4140}
#8 15.77 182 {Number {259 4 0x9285bf <nil>} 1 <nil>}
#8 15.77 183 {Number {260 5 0x9293c0 <nil>} 0 <nil>}
#8 15.77 184 {Number {258 4 0x9285cf <nil>} 0 <nil>}
#8 15.77 185 {StrictNumber {259 4 0x9285bf <nil>}  0xc000336000}
#8 15.77 186 {StrictNumber {260 5 0x9293c0 <nil>}  0xc000336000}
#8 15.77 187 {StrictNumber {0 0 <nil> <nil>}  0xc000336000}
#8 15.77 188 {StrictNumber {34 0 0xc0004a4880 <nil>} 0 <nil>}
#8 15.77 189 {StrictNumber {289 3 0x927ddd <nil>} 0.0 <nil>}
#8 15.77 190 {StrictNumber {258 4 0x9285cf <nil>}  0xc000336000}
#8 15.77 191 {String {0 0 <nil> <nil>}  0xc000336000}
#8 15.77 192 {String {34 0 0xc0004a4890 <nil>} \u263a <nil>}
#8 15.77 193 {String {263 8 0x92d7e1 <nil>} ☺ <nil>}
#8 15.77 194 {String {7 6 0x92a94a <nil>} \u263a <nil>}
#8 15.77 195 {String {289 3 0x927ddd <nil>} 0.0 <nil>}
#8 15.77 196 {String {259 4 0x9285bf <nil>} true <nil>}
#8 15.77 197 {String {260 5 0x9293c0 <nil>} false <nil>}
#8 15.77 198 {String {258 4 0x9285cf <nil>}  <nil>}
#8 15.77 199 {String {34 0 0xc0004a48a0 <nil>} false <nil>}
#8 15.77 200 {String {34 0 0xc0004a48b0 <nil>} true <nil>}
#8 15.77 201 {String {34 0 0xc0004a48c0 <nil>} 1 <nil>}
#8 15.77 202 {String {34 0 0xc0004a48d0 <nil>} 1 <nil>}
#8 15.77 203 {String {34 0 0xc0004a48e0 <nil>} 1 <nil>}
#8 15.77 204 {String {34 0 0xc0004a48f0 <nil>} 1 <nil>}
#8 15.77 205 {String {34 0 0xc0004a4900 <nil>} 1 <nil>}
#8 15.77 206 {String {34 0 0xc0004a4910 <nil>} 1 <nil>}
#8 15.77 207 {String {34 0 0xc0004a4920 <nil>} 1 <nil>}
#8 15.77 208 {String {34 0 0xc0004a4930 <nil>} 1 <nil>}
#8 15.77 209 {String {34 0 0xc0004a4940 <nil>} 1 <nil>}
#8 15.77 210 {String {34 0 0xc0004a4950 <nil>} 1 <nil>}
#8 15.77 211 {String {34 0 0xc0004a4960 <nil>} 1 <nil>}
#8 15.77 212 {String {34 0 0xc0004a4970 <nil>} 1.1 <nil>}
#8 15.77 213 {String {34 0 0xc0004a4980 <nil>} +1x.1 <nil>}
#8 15.77 214 {String {34 0 0xc0004a4990 <nil>} 0 <nil>}
#8 15.77 215 {String {34 0 0xc0004a49a0 <nil>} x <nil>}
#8 15.77 216 {String {34 0 0xc0004a49b0 <nil>}  0xc000336000}
#8 15.77 217 {StrictString {0 0 <nil> <nil>}  0xc000336000}
#8 15.77 218 {StrictString {34 0 0xc0004a49c0 <nil>} \u263a <nil>}
#8 15.77 219 {StrictString {263 8 0x92d7e1 <nil>} ☺ <nil>}
#8 15.77 220 {StrictString {7 6 0x92a94a <nil>} \u263a <nil>}
#8 15.77 221 {StrictString {289 3 0x927ddd <nil>}  0xc000336000}
#8 15.77 222 {StrictString {259 4 0x9285bf <nil>}  0xc000336000}
#8 15.77 223 {StrictString {260 5 0x9293c0 <nil>}  0xc000336000}
#8 15.77 224 {StrictString {258 4 0x9285cf <nil>}  0xc000336000}
#8 15.77 225 {Len {0 0 <nil> <nil>} 0 <nil>}
#8 15.77 226 {Len {34 0 0xc0004a49d0 <nil>} 0 0xc000336000}
#8 15.77 227 {Len {2 0 <nil> <nil>} 0 <nil>}
#8 15.77 228 {Len {263 3 0x927dd4 <nil>} 1 <nil>}
#8 15.77 229 {Len {261 3 0x927e01 <nil>} 0 <nil>}
#8 15.77 230 {Len {5 1 0xc0002286c8 <nil>} 1 <nil>}
#8 15.77 231 {Len {133 0 0xc000296288 <nil>} 0 <nil>}
#8 15.77 232 {Len {262 7 0x92c0e8 <nil>} 0 <nil>}
#8 15.77 233 {Len {134 0 0xc00021e408 <nil>} 0 <nil>}
#8 15.77 234 {Cap {0 0 <nil> <nil>} 0 <nil>}
#8 15.77 235 {Cap {34 0 0xc0004a49e0 <nil>} 0 0xc000336000}
#8 15.77 236 {Cap {2 0 <nil> <nil>} 0 <nil>}
#8 15.77 237 {Cap {261 3 0x927e01 <nil>} 16 <nil>}
#8 15.77 238 {Cap {6 1 0xc00021f408 <nil>} 16 <nil>}
#8 15.77 239 {Cap {262 7 0x92c0e8 <nil>} 16 <nil>}
#8 15.77 240 {Len {5 17 0xc0002962b0 <nil>} 17 <nil>}
#8 15.77 241 {Len {6 17 0xc00021e430 <nil>} 17 <nil>}
#8 15.77 242 {Cap {5 17 0xc0002962b0 <nil>} 32 <nil>}
#8 15.77 243 {Cap {6 17 0xc00021e430 <nil>} 32 <nil>}
#8 15.77 --- PASS: TestTypeCast (0.00s)
#8 15.77 === RUN   TestCheckError_Nil
#8 15.77 --- PASS: TestCheckError_Nil (0.00s)
#8 15.77 === RUN   TestCheckError_None
#8 15.77 --- PASS: TestCheckError_None (0.00s)
#8 15.77 === RUN   TestCheckError_Error
#8 15.77 --- PASS: TestCheckError_Error (0.00s)
#8 15.77 === RUN   TestCheckError_Empty
#8 15.77 Syntax error at index 17: invalid char
#8 15.77 
#8 15.77 	"a":{}, "b":talse, "c":{}}
#8 15.77 	................^.........
#8 15.77 
#8 15.77 "Syntax error at index 17: invalid char\n\n\t\"a\":{}, \"b\":talse, \"c\":{}}\n\t................^.........\n"
#8 15.77 --- PASS: TestCheckError_Empty (0.00s)
#8 15.77 === RUN   TestIndex
#8 15.77 --- PASS: TestIndex (0.00s)
#8 15.77 === RUN   TestUnset
#8 15.77 {"hashtags":[{"text":"freebandnames","indices":[20,34]}],"user_mentions":[]}
#8 15.77 --- PASS: TestUnset (0.00s)
#8 15.77 === RUN   TestUseNode
#8 15.77 --- PASS: TestUseNode (0.00s)
#8 15.77 === RUN   TestUseNumber
#8 15.77 --- PASS: TestUseNumber (0.00s)
#8 15.77 === RUN   TestMap
#8 15.77 --- PASS: TestMap (0.00s)
#8 15.77 === RUN   TestArray
#8 15.77 --- PASS: TestArray (0.00s)
#8 15.77 === RUN   TestNodeRaw
#8 15.77 --- PASS: TestNodeRaw (0.00s)
#8 15.77 === RUN   TestNodeGet
#8 15.77 --- PASS: TestNodeGet (0.00s)
#8 15.77 === RUN   TestNodeIndex
#8 15.77 --- PASS: TestNodeIndex (0.00s)
#8 15.77 === RUN   TestNodeGetByPath
#8 15.77 --- PASS: TestNodeGetByPath (0.00s)
#8 15.77 === RUN   TestNodeSet
#8 15.77 --- PASS: TestNodeSet (0.00s)
#8 15.77 === RUN   TestNodeSetByIndex
#8 15.77 --- PASS: TestNodeSetByIndex (0.00s)
#8 15.77 === RUN   TestNodeAdd
#8 15.77 --- PASS: TestNodeAdd (0.00s)
#8 15.77 === RUN   TestNode_Move
#8 15.77 === RUN   TestNode_Move/over_index
#8 15.77 === RUN   TestNode_Move/equal_index
#8 15.77 === RUN   TestNode_Move/forward
#8 15.77 === RUN   TestNode_Move/backward
#8 15.77 === RUN   TestNode_Move/lazy
#8 15.77 === RUN   TestNode_Move/unset_back
#8 15.77 === RUN   TestNode_Move/unset_forward
#8 15.77 --- PASS: TestNode_Move (0.00s)
#8 15.77     --- PASS: TestNode_Move/over_index (0.00s)
#8 15.77     --- PASS: TestNode_Move/equal_index (0.00s)
#8 15.77     --- PASS: TestNode_Move/forward (0.00s)
#8 15.77     --- PASS: TestNode_Move/backward (0.00s)
#8 15.77     --- PASS: TestNode_Move/lazy (0.00s)
#8 15.77     --- PASS: TestNode_Move/unset_back (0.00s)
#8 15.77     --- PASS: TestNode_Move/unset_forward (0.00s)
#8 15.77 === RUN   TestNode_Pop
#8 15.77 === RUN   TestNode_Pop/empty
#8 15.77 === RUN   TestNode_Pop/one
#8 15.77 === RUN   TestNode_Pop/raw
#8 15.77 === RUN   TestNode_Pop/unset_head
#8 15.77 === RUN   TestNode_Pop/unset_tail
#8 15.77 --- PASS: TestNode_Pop (0.00s)
#8 15.77     --- PASS: TestNode_Pop/empty (0.00s)
#8 15.77     --- PASS: TestNode_Pop/one (0.00s)
#8 15.77     --- PASS: TestNode_Pop/raw (0.00s)
#8 15.77     --- PASS: TestNode_Pop/unset_head (0.00s)
#8 15.77     --- PASS: TestNode_Pop/unset_tail (0.00s)
#8 15.77 === RUN   TestGC_Parse
#8 15.77 --- PASS: TestGC_Parse (0.09s)
#8 15.77 === RUN   TestParser_Basic
#8 15.77 --- PASS: TestParser_Basic (0.00s)
#8 15.77 === RUN   TestLoads
#8 15.77 --- PASS: TestLoads (0.00s)
#8 15.77 === RUN   TestParsehNotExist
#8 15.77 --- PASS: TestParsehNotExist (0.00s)
#8 15.77 === RUN   TestGC_Search
#8 15.77 --- PASS: TestGC_Search (0.02s)
#8 15.77 === RUN   TestNodeRace
#8 15.77 --- PASS: TestNodeRace (0.01s)
#8 15.77 === RUN   TestExportErrorInvalidChar
#8 15.77 --- PASS: TestExportErrorInvalidChar (0.00s)
#8 15.77 === RUN   TestExportErrNotExist
#8 15.77 === RUN   TestExportErrNotExist/{}
#8 15.77 === RUN   TestExportErrNotExist/_{__}_
#8 15.77 === RUN   TestExportErrNotExist/{"a":null}
#8 15.77 === RUN   TestExportErrNotExist/{"":{"b":123}}
#8 15.77 === RUN   TestExportErrNotExist/{"":{"b":123}}#01
#8 15.77 === RUN   TestExportErrNotExist/{"a":{"b":123}}
#8 15.77 === RUN   TestExportErrNotExist/{"a":{"b":123}}#01
#8 15.77 === RUN   TestExportErrNotExist/{"a":{"c":_null,_"b":{}}}
#8 15.77 === RUN   TestExportErrNotExist/{"a":{"b":123}}#02
#8 15.77 === RUN   TestExportErrNotExist/{"\"\\":{"b":123}}
#8 15.77 === RUN   TestExportErrNotExist/{"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\\":{"b":123}}
#8 15.77 === RUN   TestExportErrNotExist/[]
#8 15.77 === RUN   TestExportErrNotExist/[]#01
#8 15.77 === RUN   TestExportErrNotExist/_[_]_
#8 15.77 === RUN   TestExportErrNotExist/[null]
#8 15.77 === RUN   TestExportErrNotExist/[null,_["null",_123]]
#8 15.77 === RUN   TestExportErrNotExist/[null,_true_,_false,_14,_2.35,_-46,_"hello7",_"\"8"]
#8 15.77 === RUN   TestExportErrNotExist/[{}]
#8 15.77 === RUN   TestExportErrNotExist/[[]]
#8 15.77 === RUN   TestExportErrNotExist/[[],[{},{},_[]],{}]
#8 15.77 --- PASS: TestExportErrNotExist (0.00s)
#8 15.77     --- PASS: TestExportErrNotExist/{} (0.00s)
#8 15.77     --- PASS: TestExportErrNotExist/_{__}_ (0.00s)
#8 15.77     --- PASS: TestExportErrNotExist/{"a":null} (0.00s)
#8 15.77     --- PASS: TestExportErrNotExist/{"":{"b":123}} (0.00s)
#8 15.77     --- PASS: TestExportErrNotExist/{"":{"b":123}}#01 (0.00s)
#8 15.77     --- PASS: TestExportErrNotExist/{"a":{"b":123}} (0.00s)
#8 15.77     --- PASS: TestExportErrNotExist/{"a":{"b":123}}#01 (0.00s)
#8 15.77     --- PASS: TestExportErrNotExist/{"a":{"c":_null,_"b":{}}} (0.00s)
#8 15.77     --- PASS: TestExportErrNotExist/{"a":{"b":123}}#02 (0.00s)
#8 15.77     --- PASS: TestExportErrNotExist/{"\"\\":{"b":123}} (0.00s)
#8 15.77     --- PASS: TestExportErrNotExist/{"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\\":{"b":123}} (0.00s)
#8 15.77     --- PASS: TestExportErrNotExist/[] (0.00s)
#8 15.77     --- PASS: TestExportErrNotExist/[]#01 (0.00s)
#8 15.77     --- PASS: TestExportErrNotExist/_[_]_ (0.00s)
#8 15.77     --- PASS: TestExportErrNotExist/[null] (0.00s)
#8 15.77     --- PASS: TestExportErrNotExist/[null,_["null",_123]] (0.00s)
#8 15.77     --- PASS: TestExportErrNotExist/[null,_true_,_false,_14,_2.35,_-46,_"hello7",_"\"8"] (0.00s)
#8 15.77     --- PASS: TestExportErrNotExist/[{}] (0.00s)
#8 15.77     --- PASS: TestExportErrNotExist/[[]] (0.00s)
#8 15.77     --- PASS: TestExportErrNotExist/[[],[{},{},_[]],{}] (0.00s)
#8 15.77 === RUN   TestSearcher_GetByPath
#8 15.77 --- PASS: TestSearcher_GetByPath (0.00s)
#8 15.77 === RUN   TestSearch_LoadRawNumber
#8 15.77 --- PASS: TestSearch_LoadRawNumber (0.00s)
#8 15.77 === RUN   TestSearcher_GetByPathSingle
#8 15.77 === RUN   TestSearcher_GetByPathSingle/true
#8 15.77 === RUN   TestSearcher_GetByPathSingle/false
#8 15.77 === RUN   TestSearcher_GetByPathSingle/null
#8 15.77 === RUN   TestSearcher_GetByPathSingle/12345
#8 15.77 === RUN   TestSearcher_GetByPathSingle/12345.6789
#8 15.77 === RUN   TestSearcher_GetByPathSingle/"abc"
#8 15.77 === RUN   TestSearcher_GetByPathSingle/"a\"\\bc"
#8 15.77 === RUN   TestSearcher_GetByPathSingle/{"a":1}
#8 15.77 === RUN   TestSearcher_GetByPathSingle/{"":1}
#8 15.77 === RUN   TestSearcher_GetByPathSingle/{"":{"":1}}
#8 15.77 === RUN   TestSearcher_GetByPathSingle/[1,2,3]
#8 15.77 === RUN   TestSearcher_GetByPathSingle/[1,2,3]#01
#8 15.77 === RUN   TestSearcher_GetByPathSingle/[1,2,3]#02
#8 15.77 === RUN   TestSearcher_GetByPathSingle/tru
#8 15.77 === RUN   TestSearcher_GetByPathSingle/fal
#8 15.77 === RUN   TestSearcher_GetByPathSingle/nul
#8 15.77 === RUN   TestSearcher_GetByPathSingle/{"a":1
#8 15.77 === RUN   TestSearcher_GetByPathSingle/x12345.6789
#8 15.77 === RUN   TestSearcher_GetByPathSingle/"abc
#8 15.77 === RUN   TestSearcher_GetByPathSingle/"a\"\\bc
#8 15.77 === RUN   TestSearcher_GetByPathSingle/"a\"\
#8 15.77 === RUN   TestSearcher_GetByPathSingle/{"a":
#8 15.77 === RUN   TestSearcher_GetByPathSingle/[1,2,3]#03
#8 15.77 === RUN   TestSearcher_GetByPathSingle/[1,2,3]#04
#8 15.77 --- PASS: TestSearcher_GetByPathSingle (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/true (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/false (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/null (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/12345 (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/12345.6789 (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/"abc" (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/"a\"\\bc" (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/{"a":1} (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/{"":1} (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/{"":{"":1}} (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/[1,2,3] (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/[1,2,3]#01 (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/[1,2,3]#02 (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/tru (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/fal (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/nul (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/{"a":1 (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/x12345.6789 (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/"abc (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/"a\"\\bc (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/"a\"\ (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/{"a": (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/[1,2,3]#03 (0.00s)
#8 15.77     --- PASS: TestSearcher_GetByPathSingle/[1,2,3]#04 (0.00s)
#8 15.77 === RUN   TestSearcher_GetByPathErr
#8 15.77 --- PASS: TestSearcher_GetByPathErr (0.00s)
#8 15.77 === RUN   TestLoadIndex
#8 15.77 --- PASS: TestLoadIndex (0.00s)
#8 15.77 === RUN   TestSearchNotExist
#8 15.77 --- PASS: TestSearchNotExist (0.00s)
#8 15.77 === RUN   TestVisitor_NodeDiff
#8 15.77 === RUN   TestVisitor_NodeDiff/default
#8 15.77 === RUN   TestVisitor_NodeDiff/issue_case01
#8 15.77 === RUN   TestVisitor_NodeDiff/issue653
#8 15.77 --- PASS: TestVisitor_NodeDiff (0.01s)
#8 15.77     --- PASS: TestVisitor_NodeDiff/default (0.01s)
#8 15.77     --- PASS: TestVisitor_NodeDiff/issue_case01 (0.00s)
#8 15.77     --- PASS: TestVisitor_NodeDiff/issue653 (0.00s)
#8 15.77 === RUN   TestVisitor_UserNodeDiff
#8 15.77 === RUN   TestVisitor_UserNodeDiff/default
#8 15.77 === RUN   TestVisitor_UserNodeDiff/issue_case01
#8 15.77 === RUN   TestVisitor_UserNodeDiff/issue653
#8 15.77 --- PASS: TestVisitor_UserNodeDiff (0.00s)
#8 15.77     --- PASS: TestVisitor_UserNodeDiff/default (0.00s)
#8 15.77     --- PASS: TestVisitor_UserNodeDiff/issue_case01 (0.00s)
#8 15.77     --- PASS: TestVisitor_UserNodeDiff/issue653 (0.00s)
#8 15.77 === RUN   TestVisitor_OpSkip
#8 15.77 self.sp 0
#8 15.77 arr self.sp 1
#8 15.77 arr op skip
#8 15.77 arr self.sp 2
#8 15.77 arr finish op skip
#8 15.77 self.sp 1
#8 15.77 op skip
#8 15.77 finish op skip
#8 15.77 --- PASS: TestVisitor_OpSkip (0.00s)
#8 15.77 PASS
#8 15.77 ok  	github.com/bytedance/sonic/ast	0.648s
#8 16.88 Begin GC looping...
#8 16.88 === RUN   TestDecoder_OptionCaseSensitive
#8 16.88 --- PASS: TestDecoder_OptionCaseSensitive (0.01s)
#8 16.88 === RUN   TestDecoder_MapWithIndirectElement
#8 16.88 --- PASS: TestDecoder_MapWithIndirectElement (0.08s)
#8 16.88 === RUN   TestDecoder_OptionCaseSensitiveForManyKeys
#8 16.88 --- PASS: TestDecoder_OptionCaseSensitiveForManyKeys (0.00s)
#8 16.88 === RUN   TestSkipMismatchTypeAmd64Error
#8 16.88 === RUN   TestSkipMismatchTypeAmd64Error/short_array
#8 16.88 === RUN   TestSkipMismatchTypeAmd64Error/int_
#8 16.88 Mismatch type int64 with value array "at index 0: mismatched type with value\n\n\t[\"\"]\n\t^...\n" 123 123
#8 16.88 === RUN   TestSkipMismatchTypeAmd64Error/array
#8 16.88 === RUN   TestSkipMismatchTypeAmd64Error/map
#8 16.88 === RUN   TestSkipMismatchTypeAmd64Error/map_error
#8 16.88 "Syntax error at index 13: invalid char\n\n\t{\"true\" : { ],\"1\":1,\"2\" : true,\"\n\t.............^..................\n"
#8 16.88 invalid character ']' looking for beginning of object key string
#8 16.88 --- PASS: TestSkipMismatchTypeAmd64Error (0.01s)
#8 16.88     --- PASS: TestSkipMismatchTypeAmd64Error/short_array (0.00s)
#8 16.88     --- PASS: TestSkipMismatchTypeAmd64Error/int_ (0.00s)
#8 16.88     --- PASS: TestSkipMismatchTypeAmd64Error/array (0.00s)
#8 16.88     --- PASS: TestSkipMismatchTypeAmd64Error/map (0.00s)
#8 16.88     --- PASS: TestSkipMismatchTypeAmd64Error/map_error (0.00s)
#8 16.88 === RUN   TestCopyString
#8 16.88 --- PASS: TestCopyString (0.01s)
#8 16.88 === RUN   TestDecoder_SetOption
#8 16.88 --- PASS: TestDecoder_SetOption (0.00s)
#8 16.88 === RUN   TestGC
#8 16.88 --- PASS: TestGC (0.66s)
#8 16.88 === RUN   TestSkipMismatchTypeError
#8 16.88 === RUN   TestSkipMismatchTypeError/struct
#8 16.88 TestSkipError
#8 16.88 json: invalid use of ,string struct tag, trying to unmarshal "1.0" into bool
#8 16.88 === RUN   TestSkipMismatchTypeError/short_array
#8 16.88 === RUN   TestSkipMismatchTypeError/int_
#8 16.88 Mismatch type int64 with value array "at index 0: mismatched type with value\n\n\t[\"\"]\n\t^...\n" 123 123
#8 16.88 === RUN   TestSkipMismatchTypeError/array
#8 16.88 === RUN   TestSkipMismatchTypeError/map
#8 16.88 === RUN   TestSkipMismatchTypeError/map_error
#8 16.88 "Syntax error at index 13: invalid char\n\n\t{\"true\" : { ],\"1\":1,\"2\" : true,\"\n\t.............^..................\n"
#8 16.88 invalid character ']' looking for beginning of object key string
#8 16.88 --- PASS: TestSkipMismatchTypeError (0.01s)
#8 16.88     --- PASS: TestSkipMismatchTypeError/struct (0.01s)
#8 16.88     --- PASS: TestSkipMismatchTypeError/short_array (0.00s)
#8 16.88     --- PASS: TestSkipMismatchTypeError/int_ (0.00s)
#8 16.88     --- PASS: TestSkipMismatchTypeError/array (0.00s)
#8 16.88     --- PASS: TestSkipMismatchTypeError/map (0.00s)
#8 16.88     --- PASS: TestSkipMismatchTypeError/map_error (0.00s)
#8 16.88 === RUN   TestDecodeCorrupt
#8 16.88 --- PASS: TestDecodeCorrupt (0.00s)
#8 16.88 === RUN   TestDecodeOption
#8 16.88 --- PASS: TestDecodeOption (0.00s)
#8 16.88 === RUN   TestDecoder_Basic
#8 16.88 --- PASS: TestDecoder_Basic (0.00s)
#8 16.88 === RUN   TestDecoder_Generic
#8 16.88 --- PASS: TestDecoder_Generic (0.00s)
#8 16.88 === RUN   TestDecoder_Binding
#8 16.88 --- PASS: TestDecoder_Binding (0.05s)
#8 16.88 PASS
#8 16.88 ok  	github.com/bytedance/sonic/decoder	0.835s
#8 17.24 Begin GC looping...
#8 17.24 === RUN   TestOptionSliceOrMapNoNull
#8 17.24 --- PASS: TestOptionSliceOrMapNoNull (0.01s)
#8 17.24 === RUN   TestEncoder_Marshaler
#8 17.24 --- PASS: TestEncoder_Marshaler (0.00s)
#8 17.24 === RUN   TestMarshalerError
#8 17.24 --- PASS: TestMarshalerError (0.00s)
#8 17.24 === RUN   TestEncoder_RawMessage
#8 17.24 --- PASS: TestEncoder_RawMessage (0.00s)
#8 17.24 === RUN   TestEncoder_TextMarshaler
#8 17.24 --- PASS: TestEncoder_TextMarshaler (0.00s)
#8 17.24 === RUN   TestEncoder_Marshal_EscapeHTML
#8 17.24 --- PASS: TestEncoder_Marshal_EscapeHTML (0.01s)
#8 17.24 === RUN   TestEncoder_String
#8 17.24 --- PASS: TestEncoder_String (0.00s)
#8 17.24 === RUN   TestEncoder_FieldStringize
#8 17.24 {"x":"12345","y":[1,2,3],"z":"4567456","w":"\"asdf\""}
#8 17.24 --- PASS: TestEncoder_FieldStringize (0.00s)
#8 17.24 === RUN   TestEncodeErrorAndScratchBuf
#8 17.24 --- PASS: TestEncodeErrorAndScratchBuf (0.00s)
#8 17.24 === RUN   TestTextMarshalTextKey_SortKeys
#8 17.24 --- PASS: TestTextMarshalTextKey_SortKeys (0.01s)
#8 17.24 === RUN   TestEncoder_EscapeHTML
#8 17.24 --- PASS: TestEncoder_EscapeHTML (0.00s)
#8 17.24 === RUN   TestEncoder_Marshal_EscapeHTML_LargeJson
#8 17.24 --- PASS: TestEncoder_Marshal_EscapeHTML_LargeJson (0.02s)
#8 17.24 === RUN   TestEncoder_Generic
#8 17.24 {"statuses":[{"truncated":false,"in_reply_to_status_id_str":null,"geo":null,"user":{"profile_image_url":"https://a0.twimg.com/profile_images/2359746665/1v6zfgqo8g0d3mk7ii5s_normal.jpeg","created_at":"Mon Apr 26 06:01:55 +0000 2010","location":"LA, CA","id":137238150,"following":null,"screen_name":"sean_cummings","profile_link_color":"0084B4","profile_text_color":"333333","default_profile_image":false,"statuses_count":579,"profile_sidebar_fill_color":"DDEEF6","url":null,"profile_image_url_https":"https://si0.twimg.com/profile_images/2359746665/1v6zfgqo8g0d3mk7ii5s_normal.jpeg","followers_count":70,"profile_background_color":"C0DEED","verified":false,"show_all_inline_media":false,"profile_sidebar_border_color":"C0DEED","profile_use_background_image":true,"favourites_count":0,"notifications":null,"profile_background_image_url_https":"https://si0.twimg.com/images/themes/theme1/bg.png","geo_enabled":true,"profile_background_image_url":"https://a0.twimg.com/images/themes/theme1/bg.png","protected":false,"name":"Sean Cummings","follow_request_sent":null,"entities":{"url":{"urls":[{"expanded_url":null,"url":"","indices":[0,0]}]},"description":{"urls":[]}},"utc_offset":-28800,"listed_count":2,"lang":"en","description":"Born 330 Live 310","id_str":"137238150","default_profile":true,"friends_count":110,"profile_background_tile":false,"is_translator":false,"contributors_enabled":false,"time_zone":"Pacific Time (US & Canada)"},"text":"Aggressive Ponytail #freebandnames","metadata":{"iso_language_code":"en","result_type":"recent"},"retweet_count":0,"retweeted":false,"place":null,"in_reply_to_status_id":null,"entities":{"urls":[],"hashtags":[{"text":"freebandnames","indices":[20,34]}],"user_mentions":[]},"in_reply_to_user_id_str":null,"contributors":null,"in_reply_to_user_id":null,"in_reply_to_screen_name":null,"source":"<a href=\"//itunes.apple.com/us/app/twitter/id409789998?mt=12%5C%22\" rel=\"\\\"nofollow\\\"\">Twitter for Mac</a>","coordinates":null,"favorited":false,"created_at":"Mon Sep 24 03:35:21 +0000 2012","id_str":"250075927172759552","id":250075927172759550},{"coordinates":null,"place":null,"user":{"listed_count":118,"default_profile_image":false,"profile_background_image_url":"https://a0.twimg.com/profile_background_images/9423277/background_tile.bmp","profile_sidebar_fill_color":"DDFFCC","favourites_count":8,"url":"https://bullcityrecords.com/wnng/","utc_offset":-18000,"geo_enabled":false,"time_zone":"Eastern Time (US & Canada)","location":"Durham, NC","entities":{"url":{"urls":[{"expanded_url":null,"url":"https://bullcityrecords.com/wnng/","indices":[0,32]}]},"description":{"urls":[]}},"profile_text_color":"333333","lang":"en","followers_count":2052,"verified":false,"screen_name":"bullcityrecords","profile_image_url_https":"https://si0.twimg.com/profile_images/447958234/Lichtenstein_normal.jpg","id":29516238,"friends_count":348,"name":"Chaz Martenstein","is_translator":false,"notifications":null,"following":null,"show_all_inline_media":true,"profile_background_color":"9AE4E8","profile_background_tile":true,"created_at":"Tue Apr 07 19:05:07 +0000 2009","profile_link_color":"0084B4","id_str":"29516238","description":"You will come to Durham, North Carolina. I will sell you some records then, here in Durham, North Carolina. Fun will happen.","statuses_count":7579,"contributors_enabled":false,"protected":false,"profile_background_image_url_https":"https://si0.twimg.com/profile_background_images/9423277/background_tile.bmp","default_profile":false,"profile_sidebar_border_color":"BDDCAD","profile_image_url":"https://a0.twimg.com/profile_images/447958234/Lichtenstein_normal.jpg","follow_request_sent":null,"profile_use_background_image":true},"source":"web","truncated":false,"id_str":"249292149810667520","entities":{"urls":[],"hashtags":[{"text":"FreeBandNames","indices":[20,34]}],"user_mentions":[]},"text":"Thee Namaste Nerdz. #FreeBandNames","id":249292149810667520,"in_reply_to_screen_name":null,"favorited":false,"created_at":"Fri Sep 21 23:40:54 +0000 2012","metadata":{"iso_language_code":"pl","result_type":"recent"},"in_reply_to_status_id_str":null,"geo":null,"in_reply_to_user_id":null,"in_reply_to_user_id_str":null,"contributors":null,"retweet_count":0,"retweeted":false,"in_reply_to_status_id":null},{"text":"Mexican Heaven, Mexican Hell #freebandnames","coordinates":null,"favorited":false,"contributors":null,"id":249289491129438200,"place":null,"in_reply_to_screen_name":null,"entities":{"urls":[],"hashtags":[{"text":"freebandnames","indices":[29,43]}],"user_mentions":[]},"in_reply_to_user_id_str":null,"metadata":{"iso_language_code":"en","result_type":"recent"},"retweet_count":0,"in_reply_to_status_id_str":null,"retweeted":false,"source":"web","truncated":false,"in_reply_to_user_id":null,"user":{"favourites_count":19,"utc_offset":-18000,"followers_count":63,"profile_background_image_url_https":"https://si0.twimg.com/images/themes/theme5/bg.gif","following":null,"profile_background_tile":false,"id_str":"70789458","protected":false,"friends_count":63,"follow_request_sent":null,"is_translator":false,"contributors_enabled":false,"profile_image_url_https":"https://si0.twimg.com/profile_images/2219333930/Froggystyle_normal.png","profile_text_color":"3E4415","time_zone":"Eastern Time (US & Canada)","profile_background_image_url":"https://a0.twimg.com/images/themes/theme5/bg.gif","statuses_count":1048,"profile_sidebar_fill_color":"99CC33","profile_sidebar_border_color":"829D5E","url":null,"lang":"en","show_all_inline_media":false,"default_profile":false,"id":70789458,"screen_name":"MonkiesFist","entities":{"url":{"urls":[{"expanded_url":null,"url":"","indices":[0,0]}]},"description":{"urls":[]}},"profile_use_background_image":true,"listed_count":1,"notifications":null,"profile_background_color":"352726","geo_enabled":false,"description":"Science Fiction Writer, sort of. Likes Superheroes, Mole People, Alt. Timelines.","created_at":"Tue Sep 01 21:21:35 +0000 2009","location":"Kingston New York","profile_link_color":"D02B55","verified":false,"name":"Thomas John Wakeman","profile_image_url":"https://a0.twimg.com/profile_images/2219333930/Froggystyle_normal.png","default_profile_image":false},"in_reply_to_status_id":null,"geo":null,"created_at":"Fri Sep 21 23:30:20 +0000 2012","id_str":"249289491129438208"},{"retweet_count":0,"in_reply_to_status_id_str":null,"id":249279667666817020,"geo":null,"source":"<a href=\"//twitter.com/download/iphone%5C%22\" rel=\"\\\"nofollow\\\"\">Twitter for iPhone</a>","text":"The Foolish Mortals #freebandnames","user":{"profile_background_image_url_https":"https://si0.twimg.com/profile_background_images/106455659/rect6056-9.png","id_str":"37539828","notifications":null,"following":null,"profile_sidebar_fill_color":"BFAC83","profile_image_url":"https://a0.twimg.com/profile_images/1629790393/shrinker_2000_trans_normal.png","location":"Wisconsin, USA","contributors_enabled":false,"listed_count":52,"profile_background_color":"EEE3C4","geo_enabled":false,"show_all_inline_media":true,"id":37539828,"profile_use_background_image":true,"statuses_count":3575,"default_profile":false,"utc_offset":-21600,"followers_count":608,"time_zone":"Central Time (US & Canada)","profile_sidebar_border_color":"615A44","is_translator":false,"favourites_count":647,"url":"https://www.omnitarian.me","profile_image_url_https":"https://si0.twimg.com/profile_images/1629790393/shrinker_2000_trans_normal.png","lang":"en","default_profile_image":false,"profile_background_image_url":"https://a0.twimg.com/profile_background_images/106455659/rect6056-9.png","description":"Cartoonist, Illustrator, and T-Shirt connoisseur","friends_count":249,"profile_background_tile":true,"created_at":"Mon May 04 00:05:00 +0000 2009","entities":{"url":{"urls":[{"url":"https://www.omnitarian.me","indices":[0,24],"expanded_url":null}]},"description":{"urls":[]}},"profile_text_color":"000000","protected":false,"screen_name":"Omnitarian","name":"Marty Elmer","follow_request_sent":null,"profile_link_color":"3B2A26","verified":false},"coordinates":null,"truncated":false,"created_at":"Fri Sep 21 22:51:18 +0000 2012","in_reply_to_user_id_str":null,"metadata":{"iso_language_code":"en","result_type":"recent"},"place":null,"in_reply_to_screen_name":null,"favorited":false,"id_str":"249279667666817024","contributors":null,"retweeted":false,"in_reply_to_user_id":null,"in_reply_to_status_id":null,"entities":{"urls":[],"hashtags":[{"text":"freebandnames","indices":[20,34]}],"user_mentions":[]}}],"search_metadata":{"max_id":250126199840518140,"since_id":24012619984051000,"refresh_url":"?since_id=250126199840518145&q=%23freebandnames&result_type=mixed&include_entities=1","count":4,"since_id_str":"24012619984051000","query":"%23freebandnames","max_id_str":"250126199840518145","next_results":"?max_id=249279667666817023&q=%23freebandnames&count=4&include_entities=1&result_type=mixed","completed_in":0.035}}
#8 17.24 --- PASS: TestEncoder_Generic (0.00s)
#8 17.24 === RUN   TestEncoder_Binding
#8 17.24 {"statuses":[{"coordinates":null,"favorited":false,"truncated":false,"created_at":"Mon Sep 24 03:35:21 +0000 2012","id_str":"250075927172759552","entities":{"urls":[],"hashtags":[{"text":"freebandnames","indices":[20,34]}],"user_mentions":[]},"in_reply_to_user_id_str":null,"contributors":null,"text":"Aggressive Ponytail #freebandnames","metadata":{"iso_language_code":"en","result_type":"recent"},"retweet_count":0,"in_reply_to_status_id_str":null,"id":250075927172759552,"geo":null,"retweeted":false,"in_reply_to_user_id":null,"place":null,"user":{"profile_sidebar_fill_color":"DDEEF6","profile_sidebar_border_color":"C0DEED","profile_background_tile":false,"name":"Sean Cummings","profile_image_url":"https://a0.twimg.com/profile_images/2359746665/1v6zfgqo8g0d3mk7ii5s_normal.jpeg","created_at":"Mon Apr 26 06:01:55 +0000 2010","location":"LA, CA","follow_request_sent":null,"profile_link_color":"0084B4","is_translator":false,"id_str":"137238150","entities":{"url":{"urls":[{"expanded_url":null,"url":"","indices":[0,0]}]},"description":{"urls":[]}},"default_profile":true,"contributors_enabled":false,"favourites_count":0,"url":null,"profile_image_url_https":"https://si0.twimg.com/profile_images/2359746665/1v6zfgqo8g0d3mk7ii5s_normal.jpeg","utc_offset":-28800,"id":137238150,"profile_use_background_image":true,"listed_count":2,"profile_text_color":"333333","lang":"en","followers_count":70,"protected":false,"notifications":null,"profile_background_image_url_https":"https://si0.twimg.com/images/themes/theme1/bg.png","profile_background_color":"C0DEED","verified":false,"geo_enabled":true,"time_zone":"Pacific Time (US & Canada)","description":"Born 330 Live 310","default_profile_image":false,"profile_background_image_url":"https://a0.twimg.com/images/themes/theme1/bg.png","statuses_count":579,"friends_count":110,"following":null,"show_all_inline_media":false,"screen_name":"sean_cummings"},"in_reply_to_screen_name":null,"source":"<a href=\"//itunes.apple.com/us/app/twitter/id409789998?mt=12%5C%22\" rel=\"\\\"nofollow\\\"\">Twitter for Mac</a>","in_reply_to_status_id":null},{"coordinates":null,"favorited":false,"truncated":false,"created_at":"Fri Sep 21 23:40:54 +0000 2012","id_str":"249292149810667520","entities":{"urls":[],"hashtags":[{"text":"FreeBandNames","indices":[20,34]}],"user_mentions":[]},"in_reply_to_user_id_str":null,"contributors":null,"text":"Thee Namaste Nerdz. #FreeBandNames","metadata":{"iso_language_code":"pl","result_type":"recent"},"retweet_count":0,"in_reply_to_status_id_str":null,"id":249292149810667520,"geo":null,"retweeted":false,"in_reply_to_user_id":null,"place":null,"user":{"profile_sidebar_fill_color":"DDFFCC","profile_sidebar_border_color":"BDDCAD","profile_background_tile":true,"name":"Chaz Martenstein","profile_image_url":"https://a0.twimg.com/profile_images/447958234/Lichtenstein_normal.jpg","created_at":"Tue Apr 07 19:05:07 +0000 2009","location":"Durham, NC","follow_request_sent":null,"profile_link_color":"0084B4","is_translator":false,"id_str":"29516238","entities":{"url":{"urls":[{"expanded_url":null,"url":"https://bullcityrecords.com/wnng/","indices":[0,32]}]},"description":{"urls":[]}},"default_profile":false,"contributors_enabled":false,"favourites_count":8,"url":"https://bullcityrecords.com/wnng/","profile_image_url_https":"https://si0.twimg.com/profile_images/447958234/Lichtenstein_normal.jpg","utc_offset":-18000,"id":29516238,"profile_use_background_image":true,"listed_count":118,"profile_text_color":"333333","lang":"en","followers_count":2052,"protected":false,"notifications":null,"profile_background_image_url_https":"https://si0.twimg.com/profile_background_images/9423277/background_tile.bmp","profile_background_color":"9AE4E8","verified":false,"geo_enabled":false,"time_zone":"Eastern Time (US & Canada)","description":"You will come to Durham, North Carolina. I will sell you some records then, here in Durham, North Carolina. Fun will happen.","default_profile_image":false,"profile_background_image_url":"https://a0.twimg.com/profile_background_images/9423277/background_tile.bmp","statuses_count":7579,"friends_count":348,"following":null,"show_all_inline_media":true,"screen_name":"bullcityrecords"},"in_reply_to_screen_name":null,"source":"web","in_reply_to_status_id":null},{"coordinates":null,"favorited":false,"truncated":false,"created_at":"Fri Sep 21 23:30:20 +0000 2012","id_str":"249289491129438208","entities":{"urls":[],"hashtags":[{"text":"freebandnames","indices":[29,43]}],"user_mentions":[]},"in_reply_to_user_id_str":null,"contributors":null,"text":"Mexican Heaven, Mexican Hell #freebandnames","metadata":{"iso_language_code":"en","result_type":"recent"},"retweet_count":0,"in_reply_to_status_id_str":null,"id":249289491129438208,"geo":null,"retweeted":false,"in_reply_to_user_id":null,"place":null,"user":{"profile_sidebar_fill_color":"99CC33","profile_sidebar_border_color":"829D5E","profile_background_tile":false,"name":"Thomas John Wakeman","profile_image_url":"https://a0.twimg.com/profile_images/2219333930/Froggystyle_normal.png","created_at":"Tue Sep 01 21:21:35 +0000 2009","location":"Kingston New York","follow_request_sent":null,"profile_link_color":"D02B55","is_translator":false,"id_str":"70789458","entities":{"url":{"urls":[{"expanded_url":null,"url":"","indices":[0,0]}]},"description":{"urls":[]}},"default_profile":false,"contributors_enabled":false,"favourites_count":19,"url":null,"profile_image_url_https":"https://si0.twimg.com/profile_images/2219333930/Froggystyle_normal.png","utc_offset":-18000,"id":70789458,"profile_use_background_image":true,"listed_count":1,"profile_text_color":"3E4415","lang":"en","followers_count":63,"protected":false,"notifications":null,"profile_background_image_url_https":"https://si0.twimg.com/images/themes/theme5/bg.gif","profile_background_color":"352726","verified":false,"geo_enabled":false,"time_zone":"Eastern Time (US & Canada)","description":"Science Fiction Writer, sort of. Likes Superheroes, Mole People, Alt. Timelines.","default_profile_image":false,"profile_background_image_url":"https://a0.twimg.com/images/themes/theme5/bg.gif","statuses_count":1048,"friends_count":63,"following":null,"show_all_inline_media":false,"screen_name":"MonkiesFist"},"in_reply_to_screen_name":null,"source":"web","in_reply_to_status_id":null},{"coordinates":null,"favorited":false,"truncated":false,"created_at":"Fri Sep 21 22:51:18 +0000 2012","id_str":"249279667666817024","entities":{"urls":[],"hashtags":[{"text":"freebandnames","indices":[20,34]}],"user_mentions":[]},"in_reply_to_user_id_str":null,"contributors":null,"text":"The Foolish Mortals #freebandnames","metadata":{"iso_language_code":"en","result_type":"recent"},"retweet_count":0,"in_reply_to_status_id_str":null,"id":249279667666817024,"geo":null,"retweeted":false,"in_reply_to_user_id":null,"place":null,"user":{"profile_sidebar_fill_color":"BFAC83","profile_sidebar_border_color":"615A44","profile_background_tile":true,"name":"Marty Elmer","profile_image_url":"https://a0.twimg.com/profile_images/1629790393/shrinker_2000_trans_normal.png","created_at":"Mon May 04 00:05:00 +0000 2009","location":"Wisconsin, USA","follow_request_sent":null,"profile_link_color":"3B2A26","is_translator":false,"id_str":"37539828","entities":{"url":{"urls":[{"expanded_url":null,"url":"https://www.omnitarian.me","indices":[0,24]}]},"description":{"urls":[]}},"default_profile":false,"contributors_enabled":false,"favourites_count":647,"url":"https://www.omnitarian.me","profile_image_url_https":"https://si0.twimg.com/profile_images/1629790393/shrinker_2000_trans_normal.png","utc_offset":-21600,"id":37539828,"profile_use_background_image":true,"listed_count":52,"profile_text_color":"000000","lang":"en","followers_count":608,"protected":false,"notifications":null,"profile_background_image_url_https":"https://si0.twimg.com/profile_background_images/106455659/rect6056-9.png","profile_background_color":"EEE3C4","verified":false,"geo_enabled":false,"time_zone":"Central Time (US & Canada)","description":"Cartoonist, Illustrator, and T-Shirt connoisseur","default_profile_image":false,"profile_background_image_url":"https://a0.twimg.com/profile_background_images/106455659/rect6056-9.png","statuses_count":3575,"friends_count":249,"following":null,"show_all_inline_media":true,"screen_name":"Omnitarian"},"in_reply_to_screen_name":null,"source":"<a href=\"//twitter.com/download/iphone%5C%22\" rel=\"\\\"nofollow\\\"\">Twitter for iPhone</a>","in_reply_to_status_id":null}],"search_metadata":{"max_id":250126199840518145,"since_id":24012619984051000,"refresh_url":"?since_id=250126199840518145&q=%23freebandnames&result_type=mixed&include_entities=1","next_results":"?max_id=249279667666817023&q=%23freebandnames&count=4&include_entities=1&result_type=mixed","count":4,"completed_in":0.035,"since_id_str":"24012619984051000","query":"%23freebandnames","max_id_str":"250126199840518145"}}
#8 17.24 --- PASS: TestEncoder_Binding (0.03s)
#8 17.24 === RUN   TestEncoder_MapSortKey
#8 17.24 --- PASS: TestEncoder_MapSortKey (0.00s)
#8 17.24 PASS
#8 17.24 ok  	github.com/bytedance/sonic/encoder	0.097s
#8 17.24 === RUN   TestHashing_Fnv1a
#8 17.24 0x17a1a4f267be633d
#8 17.24 --- PASS: TestHashing_Fnv1a (0.00s)
#8 17.24 === RUN   TestHashing_StrHash
#8 17.24 0xb8e66f5b1d07b17
#8 17.24 --- PASS: TestHashing_StrHash (0.00s)
#8 17.24 === RUN   TestPcacheRace
#8 17.24 === PAUSE TestPcacheRace
#8 17.24 === CONT  TestPcacheRace
#8 17.24 --- PASS: TestPcacheRace (0.00s)
#8 17.24 PASS
#8 17.24 ok  	github.com/bytedance/sonic/internal/caching	0.002s
#8 17.24 ?   	github.com/bytedance/sonic/internal/cpu	[no test files]
#8 17.47 === RUN   TestStringReferring
#8 17.47 malloc *byte  0xc000019428
#8 17.47 first GC
#8 17.47 *byte  0xc000019428  got free 1
#8 17.47 second GC
#8 17.47 malloc *byte  0xc000018138
#8 17.47 first GC
#8 17.47 *byte  0xc000018138  got free
#8 17.47 second GC
#8 17.47 --- PASS: TestStringReferring (0.01s)
#8 17.47 === RUN   TestDecoderErrorStackOverflower
#8 17.47 --- PASS: TestDecoderErrorStackOverflower (0.00s)
#8 17.47 === RUN   TestStreamError
#8 17.47 --- PASS: TestStreamError (0.00s)
#8 17.47 === RUN   TestReaderError
#8 17.47 === RUN   TestReaderError/middle
#8 17.47 === RUN   TestReaderError/after
#8 17.47 --- PASS: TestReaderError (0.00s)
#8 17.47     --- PASS: TestReaderError/middle (0.00s)
#8 17.47     --- PASS: TestReaderError/after (0.00s)
#8 17.47 === RUN   TestDecodeEmpty
#8 17.47 --- PASS: TestDecodeEmpty (0.00s)
#8 17.47 === RUN   TestDecodeRecurse
#8 17.47 (0x0,0x0)
#8 17.47 --- PASS: TestDecodeRecurse (0.00s)
#8 17.47 === RUN   TestBuffered
#8 17.47 "}{ } {"11
#8 17.47 222"} b {}
#8 17.47 --- PASS: TestBuffered (0.00s)
#8 17.47 PASS
#8 17.47 ok  	github.com/bytedance/sonic/internal/decoder/api	0.020s
#8 17.47 ?   	github.com/bytedance/sonic/internal/decoder/consts	[no test files]
#8 17.47 === RUN   TestErrors_Normal
#8 17.47 Syntax error at index 33: invalid char
#8 17.47 
#8 17.47 	ng message with 'hello, world' e
#8 17.47 	................^...............
#8 17.47 
#8 17.47 --- PASS: TestErrors_Normal (0.00s)
#8 17.47 === RUN   TestErrors_LeftEdge
#8 17.47 Syntax error at index 6: invalid char
#8 17.47 
#8 17.47 	this is a very long message with
#8 17.47 	......^.........................
#8 17.47 
#8 17.47 --- PASS: TestErrors_LeftEdge (0.00s)
#8 17.47 === RUN   TestErrors_RightEdge
#8 17.47 Syntax error at index 65: invalid char
#8 17.47 
#8 17.47 	o, world' embedded in the string
#8 17.47 	...........................^....
#8 17.47 
#8 17.47 --- PASS: TestErrors_RightEdge (0.00s)
#8 17.47 === RUN   TestErrors_AfterRightEdge
#8 17.47 Syntax error at index 70: invalid char
#8 17.47 
#8 17.47 	this is a very long message with 'hello, world' embedded in the string
#8 17.47 	^
#8 17.47 
#8 17.47 --- PASS: TestErrors_AfterRightEdge (0.00s)
#8 17.47 === RUN   TestErrors_ShortDescription
#8 17.47 Syntax error at index 5: invalid char
#8 17.47 
#8 17.47 	hello, world
#8 17.47 	.....^......
#8 17.47 
#8 17.47 --- PASS: TestErrors_ShortDescription (0.00s)
#8 17.47 === RUN   TestErrors_EmptyDescription
#8 17.47 Syntax error no sources available, the input json is empty: errors.SyntaxError{Pos:0, Src:"", Code:0x2, Msg:""}
#8 17.47 --- PASS: TestErrors_EmptyDescription (0.00s)
#8 17.47 === RUN   Fuzz_calcBounds
#8 17.47 === RUN   Fuzz_calcBounds/seed#0
#8 17.47 --- PASS: Fuzz_calcBounds (0.00s)
#8 17.47     --- PASS: Fuzz_calcBounds/seed#0 (0.00s)
#8 17.47 PASS
#8 17.47 ok  	github.com/bytedance/sonic/internal/decoder/errors	0.003s
#8 18.11 === RUN   TestAssembler_OpCode
#8 18.11 === RUN   TestAssembler_OpCode/_OP_any/stdlib
#8 18.11 _OP_any/stdlib
#8 18.11 === RUN   TestAssembler_OpCode/_OP_any/use_int64
#8 18.11 _OP_any/use_int64
#8 18.11 === RUN   TestAssembler_OpCode/_OP_any/use_number
#8 18.11 _OP_any/use_number
#8 18.11 === RUN   TestAssembler_OpCode/_OP_str/plain
#8 18.11 _OP_str/plain
#8 18.11 === RUN   TestAssembler_OpCode/_OP_str/unquote
#8 18.11 _OP_str/unquote
#8 18.11 === RUN   TestAssembler_OpCode/_OP_str/unquote_unirep
#8 18.11 _OP_str/unquote_unirep
#8 18.11 === RUN   TestAssembler_OpCode/_OP_str/error_eof
#8 18.11 _OP_str/error_eof
#8 18.11 === RUN   TestAssembler_OpCode/_OP_str/error_invalid_escape
#8 18.11 _OP_str/error_invalid_escape
#8 18.11 === RUN   TestAssembler_OpCode/_OP_str/error_invalid_unicode
#8 18.11 _OP_str/error_invalid_unicode
#8 18.11 === RUN   TestAssembler_OpCode/_OP_str/error_invalid_char
#8 18.11 _OP_str/error_invalid_char
#8 18.11 === RUN   TestAssembler_OpCode/_OP_bin
#8 18.11 _OP_bin
#8 18.11 === RUN   TestAssembler_OpCode/_OP_bin/error_eof
#8 18.11 _OP_bin/error_eof
#8 18.11 === RUN   TestAssembler_OpCode/_OP_bin/error_corrupt_input
#8 18.11 _OP_bin/error_corrupt_input
#8 18.11 === RUN   TestAssembler_OpCode/_OP_bool/true
#8 18.11 _OP_bool/true
#8 18.11 === RUN   TestAssembler_OpCode/_OP_bool/skip
#8 18.11 _OP_bool/skip
#8 18.11 === RUN   TestAssembler_OpCode/_OP_bool/false
#8 18.11 _OP_bool/false
#8 18.11 === RUN   TestAssembler_OpCode/_OP_bool/false_pos
#8 18.11 _OP_bool/false_pos
#8 18.11 === RUN   TestAssembler_OpCode/_OP_bool/error_eof_1
#8 18.11 _OP_bool/error_eof_1
#8 18.11 === RUN   TestAssembler_OpCode/_OP_bool/error_eof_2
#8 18.11 _OP_bool/error_eof_2
#8 18.11 === RUN   TestAssembler_OpCode/_OP_bool/error_invalid_char_1
#8 18.11 _OP_bool/error_invalid_char_1
#8 18.11 === RUN   TestAssembler_OpCode/_OP_bool/error_invalid_char_2
#8 18.11 _OP_bool/error_invalid_char_2
#8 18.11 === RUN   TestAssembler_OpCode/_OP_num/positive
#8 18.11 _OP_num/positive
#8 18.11 === RUN   TestAssembler_OpCode/_OP_num/negative
#8 18.11 _OP_num/negative
#8 18.11 === RUN   TestAssembler_OpCode/_OP_num/error_eof
#8 18.11 _OP_num/error_eof
#8 18.11 === RUN   TestAssembler_OpCode/_OP_num/error_invalid_char
#8 18.11 _OP_num/error_invalid_char
#8 18.11 === RUN   TestAssembler_OpCode/_OP_i8
#8 18.11 _OP_i8
#8 18.11 === RUN   TestAssembler_OpCode/_OP_i8/error_overflow
#8 18.11 _OP_i8/error_overflow
#8 18.11 === RUN   TestAssembler_OpCode/_OP_i8/error_wrong_type
#8 18.11 _OP_i8/error_wrong_type
#8 18.11 === RUN   TestAssembler_OpCode/_OP_u8
#8 18.11 _OP_u8
#8 18.11 === RUN   TestAssembler_OpCode/_OP_u8/error_overflow
#8 18.11 _OP_u8/error_overflow
#8 18.11 === RUN   TestAssembler_OpCode/_OP_u8/error_underflow
#8 18.11 _OP_u8/error_underflow
#8 18.11 === RUN   TestAssembler_OpCode/_OP_u8/error_wrong_type
#8 18.11 _OP_u8/error_wrong_type
#8 18.11 === RUN   TestAssembler_OpCode/_OP_f32
#8 18.11 _OP_f32
#8 18.11 === RUN   TestAssembler_OpCode/_OP_f32/overflow
#8 18.11 _OP_f32/overflow
#8 18.11 === RUN   TestAssembler_OpCode/_OP_f32/underflow
#8 18.11 _OP_f32/underflow
#8 18.11 === RUN   TestAssembler_OpCode/_OP_f64
#8 18.11 _OP_f64
#8 18.11 === RUN   TestAssembler_OpCode/_OP_unquote/plain
#8 18.11 _OP_unquote/plain
#8 18.11 === RUN   TestAssembler_OpCode/_OP_unquote/unquote
#8 18.11 _OP_unquote/unquote
#8 18.11 === RUN   TestAssembler_OpCode/_OP_unquote/error_invalid_end
#8 18.11 _OP_unquote/error_invalid_end
#8 18.11 === RUN   TestAssembler_OpCode/_OP_nil_1
#8 18.11 _OP_nil_1
#8 18.11 === RUN   TestAssembler_OpCode/_OP_nil_2
#8 18.11 _OP_nil_2
#8 18.11 === RUN   TestAssembler_OpCode/_OP_nil_3
#8 18.11 _OP_nil_3
#8 18.11 === RUN   TestAssembler_OpCode/_OP_deref
#8 18.11 _OP_deref
#8 18.11 === RUN   TestAssembler_OpCode/_OP_map_init
#8 18.11 _OP_map_init
#8 18.11 === RUN   TestAssembler_OpCode/_OP_map_key_i8
#8 18.11 _OP_map_key_i8
#8 18.11 === RUN   TestAssembler_OpCode/_OP_map_key_i32
#8 18.11 _OP_map_key_i32
#8 18.11 === RUN   TestAssembler_OpCode/_OP_map_key_i64
#8 18.11 _OP_map_key_i64
#8 18.11 === RUN   TestAssembler_OpCode/_OP_map_key_u8
#8 18.11 _OP_map_key_u8
#8 18.11 === RUN   TestAssembler_OpCode/_OP_map_key_u32
#8 18.11 _OP_map_key_u32
#8 18.11 === RUN   TestAssembler_OpCode/_OP_map_key_u64
#8 18.11 _OP_map_key_u64
#8 18.11 === RUN   TestAssembler_OpCode/_OP_map_key_f32
#8 18.11 _OP_map_key_f32
#8 18.11 === RUN   TestAssembler_OpCode/_OP_map_key_f64
#8 18.11 _OP_map_key_f64
#8 18.11 === RUN   TestAssembler_OpCode/_OP_map_key_str/plain
#8 18.11 _OP_map_key_str/plain
#8 18.11 === RUN   TestAssembler_OpCode/_OP_map_key_str/unquote
#8 18.11 _OP_map_key_str/unquote
#8 18.11 === RUN   TestAssembler_OpCode/_OP_map_key_utext/value
#8 18.11 _OP_map_key_utext/value
#8 18.11 === RUN   TestAssembler_OpCode/_OP_map_key_utext/pointer
#8 18.11 _OP_map_key_utext/pointer
#8 18.11 === RUN   TestAssembler_OpCode/_OP_map_key_utext_p
#8 18.11 _OP_map_key_utext_p
#8 18.11 === RUN   TestAssembler_OpCode/_OP_array_skip
#8 18.11 _OP_array_skip
#8 18.11 === RUN   TestAssembler_OpCode/_OP_slice_init
#8 18.11 _OP_slice_init
#8 18.11 === RUN   TestAssembler_OpCode/_OP_slice_append
#8 18.11 _OP_slice_append
#8 18.11 === RUN   TestAssembler_OpCode/_OP_object_next
#8 18.11 _OP_object_next
#8 18.11 === RUN   TestAssembler_OpCode/_OP_struct_field
#8 18.11 _OP_struct_field
#8 18.11 === RUN   TestAssembler_OpCode/_OP_struct_field/case_insensitive
#8 18.11 _OP_struct_field/case_insensitive
#8 18.11 === RUN   TestAssembler_OpCode/_OP_struct_field/not_found
#8 18.11 _OP_struct_field/not_found
#8 18.11 === RUN   TestAssembler_OpCode/_OP_unmarshal/value
#8 18.11 _OP_unmarshal/value
#8 18.11 === RUN   TestAssembler_OpCode/_OP_unmarshal/pointer
#8 18.11 _OP_unmarshal/pointer
#8 18.11 === RUN   TestAssembler_OpCode/_OP_unmarshal_p
#8 18.11 _OP_unmarshal_p
#8 18.11 === RUN   TestAssembler_OpCode/_OP_unmarshal_text/value
#8 18.11 _OP_unmarshal_text/value
#8 18.11 === RUN   TestAssembler_OpCode/_OP_unmarshal_text/pointer
#8 18.11 _OP_unmarshal_text/pointer
#8 18.11 === RUN   TestAssembler_OpCode/_OP_unmarshal_text_p
#8 18.11 _OP_unmarshal_text_p
#8 18.11 === RUN   TestAssembler_OpCode/_OP_lspace
#8 18.11 _OP_lspace
#8 18.11 === RUN   TestAssembler_OpCode/_OP_lspace/error
#8 18.11 _OP_lspace/error
#8 18.11 === RUN   TestAssembler_OpCode/_OP_match_char/correct
#8 18.11 _OP_match_char/correct
#8 18.11 === RUN   TestAssembler_OpCode/_OP_match_char/error
#8 18.11 _OP_match_char/error
#8 18.11 === RUN   TestAssembler_OpCode/_OP_switch
#8 18.11 _OP_switch
#8 18.11 --- PASS: TestAssembler_OpCode (0.05s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_any/stdlib (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_any/use_int64 (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_any/use_number (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_str/plain (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_str/unquote (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_str/unquote_unirep (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_str/error_eof (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_str/error_invalid_escape (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_str/error_invalid_unicode (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_str/error_invalid_char (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_bin (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_bin/error_eof (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_bin/error_corrupt_input (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_bool/true (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_bool/skip (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_bool/false (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_bool/false_pos (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_bool/error_eof_1 (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_bool/error_eof_2 (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_bool/error_invalid_char_1 (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_bool/error_invalid_char_2 (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_num/positive (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_num/negative (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_num/error_eof (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_num/error_invalid_char (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_i8 (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_i8/error_overflow (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_i8/error_wrong_type (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_u8 (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_u8/error_overflow (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_u8/error_underflow (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_u8/error_wrong_type (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_f32 (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_f32/overflow (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_f32/underflow (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_f64 (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_unquote/plain (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_unquote/unquote (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_unquote/error_invalid_end (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_nil_1 (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_nil_2 (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_nil_3 (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_deref (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_map_init (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_map_key_i8 (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_map_key_i32 (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_map_key_i64 (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_map_key_u8 (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_map_key_u32 (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_map_key_u64 (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_map_key_f32 (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_map_key_f64 (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_map_key_str/plain (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_map_key_str/unquote (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_map_key_utext/value (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_map_key_utext/pointer (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_map_key_utext_p (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_array_skip (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_slice_init (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_slice_append (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_object_next (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_struct_field (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_struct_field/case_insensitive (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_struct_field/not_found (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_unmarshal/value (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_unmarshal/pointer (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_unmarshal_p (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_unmarshal_text/value (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_unmarshal_text/pointer (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_unmarshal_text_p (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_lspace (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_lspace/error (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_match_char/correct (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_match_char/error (0.00s)
#8 18.11     --- PASS: TestAssembler_OpCode/_OP_switch (0.00s)
#8 18.11 === RUN   TestAssembler_DecodeStruct
#8 18.11 --- PASS: TestAssembler_DecodeStruct (0.01s)
#8 18.11 === RUN   TestAssembler_PrologueAndEpilogue
#8 18.11 --- PASS: TestAssembler_PrologueAndEpilogue (0.00s)
#8 18.11 === RUN   TestAssembler_DecodeStruct_SinglePrivateField
#8 18.11 --- PASS: TestAssembler_DecodeStruct_SinglePrivateField (0.00s)
#8 18.11 === RUN   TestAssembler_DecodeByteSlice_Bin
#8 18.11 --- PASS: TestAssembler_DecodeByteSlice_Bin (0.00s)
#8 18.11 === RUN   TestAssembler_DecodeByteSlice_List
#8 18.11 --- PASS: TestAssembler_DecodeByteSlice_List (0.00s)
#8 18.11 === RUN   TestCompiler_Compile
#8 18.11 --- PASS: TestCompiler_Compile (0.00s)
#8 18.11 === RUN   TestGeneric_DecodeInterface
#8 18.11 v: ([]interface {}) (len=8 cap=16) {
#8 18.11  (interface {}) <nil>,
#8 18.11  (bool) true,
#8 18.11  (bool) false,
#8 18.11  (float64) 1234,
#8 18.11  (float64) -1.25e-08,
#8 18.11  (string) (len=11) "hello\nworld",
#8 18.11  ([]interface {}) (cap=16) {
#8 18.11  },
#8 18.11  (map[string]interface {}) (len=2) {
#8 18.11   (string) (len=4) "asdf": ([]interface {}) (len=8 cap=16) {
#8 18.11    (float64) 1,
#8 18.11    (float64) 2.5,
#8 18.11    (string) (len=4) "qwer",
#8 18.11    (interface {}) <nil>,
#8 18.11    (bool) true,
#8 18.11    (bool) false,
#8 18.11    ([]interface {}) (cap=16) {
#8 18.11    },
#8 18.11    (map[string]interface {}) (len=1) {
#8 18.11     (string) (len=4) "zxcv": (string) (len=4) "fghj"
#8 18.11    }
#8 18.11   },
#8 18.11   (string) (len=4) "qwer": (float64) 7777
#8 18.11  }
#8 18.11 }
#8 18.11 type: []interface {}
#8 18.11 --- PASS: TestGeneric_DecodeInterface (0.00s)
#8 18.11 PASS
#8 18.11 ok  	github.com/bytedance/sonic/internal/decoder/jitdec	0.071s
#8 18.20 === RUN   TestParseNative
#8 18.20 (optdec.jsonStat) {
#8 18.20  object: (uint32) 3,
#8 18.20  array: (uint32) 5,
#8 18.20  str: (uint32) 2,
#8 18.20  number: (uint32) 1,
#8 18.20  array_elems: (uint32) 5,
#8 18.20  object_keys: (uint32) 8,
#8 18.20  max_depth: (uint32) 4
#8 18.20 }
#8 18.20 --- PASS: TestParseNative (0.00s)
#8 18.20 === RUN   TestParseNativeRetryLargeJson
#8 18.20 === RUN   TestParseNativeRetryLargeJson/Object
#8 18.20 === RUN   TestParseNativeRetryLargeJson/ObjectNull
#8 18.20 === RUN   TestParseNativeRetryLargeJson/Object2
#8 18.20 === RUN   TestParseNativeRetryLargeJson/Array
#8 18.20 --- PASS: TestParseNativeRetryLargeJson (0.13s)
#8 18.20     --- PASS: TestParseNativeRetryLargeJson/Object (0.05s)
#8 18.20     --- PASS: TestParseNativeRetryLargeJson/ObjectNull (0.05s)
#8 18.20     --- PASS: TestParseNativeRetryLargeJson/Object2 (0.02s)
#8 18.20     --- PASS: TestParseNativeRetryLargeJson/Array (0.02s)
#8 18.20 PASS
#8 18.20 ok  	github.com/bytedance/sonic/internal/decoder/optdec	0.144s
#8 18.85 Begin GC looping...
#8 18.85 === RUN   TestCompiler_Compile
#8 18.85 --- PASS: TestCompiler_Compile (0.00s)
#8 18.85 === RUN   TestReflectDirect
#8 18.85 b: 0xc0000a7ee8
#8 18.85 v: 25 0xc0000a7f10
#8 18.85 pv: 54 0xc0000a7ee8
#8 18.85 --- PASS: TestReflectDirect (0.00s)
#8 18.85 === RUN   TestGC
#8 18.85 --- PASS: TestGC (0.67s)
#8 18.85 === RUN   TestEncoderMemoryCorruption
#8 18.85 TestEncoderMemoryCorruption
#8 18.85 4097
#8 18.85 --- PASS: TestEncoderMemoryCorruption (0.01s)
#8 18.85 === RUN   TestOptionSliceOrMapNoNull
#8 18.85 --- PASS: TestOptionSliceOrMapNoNull (0.01s)
#8 18.85 === RUN   TestEncoder_String
#8 18.85 --- PASS: TestEncoder_String (0.00s)
#8 18.85 === RUN   TestEncoder_FieldStringize
#8 18.85 {"x":"12345","y":[1,2,3],"z":"4567456","w":"\"asdf\""}
#8 18.85 --- PASS: TestEncoder_FieldStringize (0.00s)
#8 18.85 === RUN   TestEncodeErrorAndScratchBuf
#8 18.85 --- PASS: TestEncodeErrorAndScratchBuf (0.00s)
#8 18.85 === RUN   TestEncoder_Marshaler
#8 18.85 --- PASS: TestEncoder_Marshaler (0.00s)
#8 18.85 === RUN   TestMarshalerError
#8 18.85 --- PASS: TestMarshalerError (0.00s)
#8 18.85 === RUN   TestEncoder_RawMessage
#8 18.85 --- PASS: TestEncoder_RawMessage (0.00s)
#8 18.85 === RUN   TestEncoder_TextMarshaler
#8 18.85 --- PASS: TestEncoder_TextMarshaler (0.01s)
#8 18.85 === RUN   TestTextMarshalTextKey_SortKeys
#8 18.85 --- PASS: TestTextMarshalTextKey_SortKeys (0.01s)
#8 18.85 === RUN   TestEncoder_Marshal_EscapeHTML
#8 18.85 --- PASS: TestEncoder_Marshal_EscapeHTML (0.01s)
#8 18.85 === RUN   TestEncoder_EscapeHTML
#8 18.85 --- PASS: TestEncoder_EscapeHTML (0.00s)
#8 18.85 === RUN   TestEncoder_Marshal_EscapeHTML_LargeJson
#8 18.85 --- PASS: TestEncoder_Marshal_EscapeHTML_LargeJson (0.02s)
#8 18.85 === RUN   TestEncoder_Generic
#8 18.85 {"statuses":[{"geo":null,"in_reply_to_status_id":null,"entities":{"user_mentions":[],"urls":[],"hashtags":[{"text":"freebandnames","indices":[20,34]}]},"metadata":{"iso_language_code":"en","result_type":"recent"},"in_reply_to_status_id_str":null,"favorited":false,"created_at":"Mon Sep 24 03:35:21 +0000 2012","contributors":null,"retweeted":false,"in_reply_to_user_id":null,"user":{"profile_image_url":"https://a0.twimg.com/profile_images/2359746665/1v6zfgqo8g0d3mk7ii5s_normal.jpeg","id_str":"137238150","profile_use_background_image":true,"show_all_inline_media":false,"follow_request_sent":null,"utc_offset":-28800,"notifications":null,"statuses_count":579,"profile_sidebar_border_color":"C0DEED","created_at":"Mon Apr 26 06:01:55 +0000 2010","default_profile":true,"id":137238150,"geo_enabled":true,"profile_background_image_url":"https://a0.twimg.com/images/themes/theme1/bg.png","name":"Sean Cummings","entities":{"url":{"urls":[{"indices":[0,0],"expanded_url":null,"url":""}]},"description":{"urls":[]}},"favourites_count":0,"screen_name":"sean_cummings","profile_background_tile":false,"location":"LA, CA","followers_count":70,"profile_link_color":"0084B4","contributors_enabled":false,"listed_count":2,"default_profile_image":false,"profile_sidebar_fill_color":"DDEEF6","is_translator":false,"url":null,"profile_text_color":"333333","protected":false,"profile_background_color":"C0DEED","verified":false,"friends_count":110,"profile_image_url_https":"https://si0.twimg.com/profile_images/2359746665/1v6zfgqo8g0d3mk7ii5s_normal.jpeg","lang":"en","profile_background_image_url_https":"https://si0.twimg.com/images/themes/theme1/bg.png","time_zone":"Pacific Time (US & Canada)","description":"Born 330 Live 310","following":null},"in_reply_to_screen_name":null,"truncated":false,"text":"Aggressive Ponytail #freebandnames","id":250075927172759550,"place":null,"source":"<a href=\"//itunes.apple.com/us/app/twitter/id409789998?mt=12%5C%22\" rel=\"\\\"nofollow\\\"\">Twitter for Mac</a>","coordinates":null,"id_str":"250075927172759552","in_reply_to_user_id_str":null,"retweet_count":0},{"favorited":false,"metadata":{"iso_language_code":"pl","result_type":"recent"},"geo":null,"in_reply_to_user_id":null,"place":null,"in_reply_to_screen_name":null,"source":"web","in_reply_to_status_id":null,"in_reply_to_status_id_str":null,"retweeted":false,"user":{"is_translator":false,"favourites_count":8,"url":"https://bullcityrecords.com/wnng/","profile_image_url_https":"https://si0.twimg.com/profile_images/447958234/Lichtenstein_normal.jpg","followers_count":2052,"verified":false,"show_all_inline_media":true,"default_profile":false,"id":29516238,"notifications":null,"created_at":"Tue Apr 07 19:05:07 +0000 2009","profile_link_color":"0084B4","entities":{"url":{"urls":[{"expanded_url":null,"url":"https://bullcityrecords.com/wnng/","indices":[0,32]}]},"description":{"urls":[]}},"time_zone":"Eastern Time (US & Canada)","screen_name":"bullcityrecords","profile_image_url":"https://a0.twimg.com/profile_images/447958234/Lichtenstein_normal.jpg","location":"Durham, NC","id_str":"29516238","utc_offset":-18000,"protected":false,"description":"You will come to Durham, North Carolina. I will sell you some records then, here in Durham, North Carolina. Fun will happen.","profile_background_image_url":"https://a0.twimg.com/profile_background_images/9423277/background_tile.bmp","statuses_count":7579,"profile_background_tile":true,"name":"Chaz Martenstein","follow_request_sent":null,"friends_count":348,"profile_use_background_image":true,"profile_text_color":"333333","contributors_enabled":false,"lang":"en","profile_background_image_url_https":"https://si0.twimg.com/profile_background_images/9423277/background_tile.bmp","default_profile_image":false,"profile_background_color":"9AE4E8","profile_sidebar_fill_color":"DDFFCC","profile_sidebar_border_color":"BDDCAD","listed_count":118,"geo_enabled":false,"following":null},"coordinates":null,"truncated":false,"entities":{"urls":[],"hashtags":[{"text":"FreeBandNames","indices":[20,34]}],"user_mentions":[]},"in_reply_to_user_id_str":null,"contributors":null,"id":249292149810667520,"created_at":"Fri Sep 21 23:40:54 +0000 2012","id_str":"249292149810667520","text":"Thee Namaste Nerdz. #FreeBandNames","retweet_count":0},{"truncated":false,"text":"Mexican Heaven, Mexican Hell #freebandnames","id":249289491129438200,"user":{"utc_offset":-18000,"show_all_inline_media":false,"entities":{"url":{"urls":[{"expanded_url":null,"url":"","indices":[0,0]}]},"description":{"urls":[]}},"contributors_enabled":false,"profile_use_background_image":true,"profile_text_color":"3E4415","verified":false,"profile_background_image_url":"https://a0.twimg.com/images/themes/theme5/bg.gif","profile_sidebar_fill_color":"99CC33","url":null,"notifications":null,"friends_count":63,"screen_name":"MonkiesFist","profile_sidebar_border_color":"829D5E","created_at":"Tue Sep 01 21:21:35 +0000 2009","location":"Kingston New York","is_translator":false,"listed_count":1,"name":"Thomas John Wakeman","profile_link_color":"D02B55","protected":false,"profile_background_image_url_https":"https://si0.twimg.com/images/themes/theme5/bg.gif","geo_enabled":false,"id_str":"70789458","id":70789458,"profile_background_tile":false,"default_profile":false,"favourites_count":19,"followers_count":63,"time_zone":"Eastern Time (US & Canada)","default_profile_image":false,"statuses_count":1048,"follow_request_sent":null,"lang":"en","profile_background_color":"352726","description":"Science Fiction Writer, sort of. Likes Superheroes, Mole People, Alt. Timelines.","following":null,"profile_image_url":"https://a0.twimg.com/profile_images/2219333930/Froggystyle_normal.png","profile_image_url_https":"https://si0.twimg.com/profile_images/2219333930/Froggystyle_normal.png"},"in_reply_to_screen_name":null,"created_at":"Fri Sep 21 23:30:20 +0000 2012","id_str":"249289491129438208","entities":{"hashtags":[{"indices":[29,43],"text":"freebandnames"}],"user_mentions":[],"urls":[]},"metadata":{"iso_language_code":"en","result_type":"recent"},"source":"web","in_reply_to_status_id":null,"retweet_count":0,"in_reply_to_status_id_str":null,"in_reply_to_user_id":null,"place":null,"coordinates":null,"favorited":false,"in_reply_to_user_id_str":null,"contributors":null,"geo":null,"retweeted":false},{"in_reply_to_user_id_str":null,"retweeted":false,"in_reply_to_status_id_str":null,"id":249279667666817020,"created_at":"Fri Sep 21 22:51:18 +0000 2012","id_str":"249279667666817024","entities":{"urls":[],"hashtags":[{"text":"freebandnames","indices":[20,34]}],"user_mentions":[]},"text":"The Foolish Mortals #freebandnames","metadata":{"iso_language_code":"en","result_type":"recent"},"user":{"id_str":"37539828","favourites_count":647,"profile_text_color":"000000","notifications":null,"friends_count":249,"screen_name":"Omnitarian","profile_sidebar_border_color":"615A44","follow_request_sent":null,"default_profile":false,"contributors_enabled":false,"profile_image_url_https":"https://si0.twimg.com/profile_images/1629790393/shrinker_2000_trans_normal.png","profile_use_background_image":true,"lang":"en","time_zone":"Central Time (US & Canada)","location":"Wisconsin, USA","listed_count":52,"verified":false,"show_all_inline_media":true,"profile_image_url":"https://a0.twimg.com/profile_images/1629790393/shrinker_2000_trans_normal.png","utc_offset":-21600,"geo_enabled":false,"description":"Cartoonist, Illustrator, and T-Shirt connoisseur","statuses_count":3575,"id":37539828,"followers_count":608,"protected":false,"following":null,"profile_background_tile":true,"name":"Marty Elmer","created_at":"Mon May 04 00:05:00 +0000 2009","profile_link_color":"3B2A26","url":"https://www.omnitarian.me","profile_background_color":"EEE3C4","profile_sidebar_fill_color":"BFAC83","is_translator":false,"entities":{"description":{"urls":[]},"url":{"urls":[{"expanded_url":null,"url":"https://www.omnitarian.me","indices":[0,24]}]}},"profile_background_image_url":"https://a0.twimg.com/profile_background_images/106455659/rect6056-9.png","profile_background_image_url_https":"https://si0.twimg.com/profile_background_images/106455659/rect6056-9.png","default_profile_image":false},"coordinates":null,"contributors":null,"retweet_count":0,"in_reply_to_user_id":null,"place":null,"in_reply_to_screen_name":null,"source":"<a href=\"//twitter.com/download/iphone%5C%22\" rel=\"\\\"nofollow\\\"\">Twitter for iPhone</a>","in_reply_to_status_id":null,"geo":null,"favorited":false,"truncated":false}],"search_metadata":{"completed_in":0.035,"since_id_str":"24012619984051000","max_id_str":"250126199840518145","max_id":250126199840518140,"since_id":24012619984051000,"refresh_url":"?since_id=250126199840518145&q=%23freebandnames&result_type=mixed&include_entities=1","next_results":"?max_id=249279667666817023&q=%23freebandnames&count=4&include_entities=1&result_type=mixed","count":4,"query":"%23freebandnames"}}
#8 18.85 --- PASS: TestEncoder_Generic (0.00s)
#8 18.85 === RUN   TestEncoder_Binding
#8 18.85 {"statuses":[{"coordinates":null,"favorited":false,"truncated":false,"created_at":"Mon Sep 24 03:35:21 +0000 2012","id_str":"250075927172759552","entities":{"urls":[],"hashtags":[{"text":"freebandnames","indices":[20,34]}],"user_mentions":[]},"in_reply_to_user_id_str":null,"contributors":null,"text":"Aggressive Ponytail #freebandnames","metadata":{"iso_language_code":"en","result_type":"recent"},"retweet_count":0,"in_reply_to_status_id_str":null,"id":250075927172759552,"geo":null,"retweeted":false,"in_reply_to_user_id":null,"place":null,"user":{"profile_sidebar_fill_color":"DDEEF6","profile_sidebar_border_color":"C0DEED","profile_background_tile":false,"name":"Sean Cummings","profile_image_url":"https://a0.twimg.com/profile_images/2359746665/1v6zfgqo8g0d3mk7ii5s_normal.jpeg","created_at":"Mon Apr 26 06:01:55 +0000 2010","location":"LA, CA","follow_request_sent":null,"profile_link_color":"0084B4","is_translator":false,"id_str":"137238150","entities":{"url":{"urls":[{"expanded_url":null,"url":"","indices":[0,0]}]},"description":{"urls":[]}},"default_profile":true,"contributors_enabled":false,"favourites_count":0,"url":null,"profile_image_url_https":"https://si0.twimg.com/profile_images/2359746665/1v6zfgqo8g0d3mk7ii5s_normal.jpeg","utc_offset":-28800,"id":137238150,"profile_use_background_image":true,"listed_count":2,"profile_text_color":"333333","lang":"en","followers_count":70,"protected":false,"notifications":null,"profile_background_image_url_https":"https://si0.twimg.com/images/themes/theme1/bg.png","profile_background_color":"C0DEED","verified":false,"geo_enabled":true,"time_zone":"Pacific Time (US & Canada)","description":"Born 330 Live 310","default_profile_image":false,"profile_background_image_url":"https://a0.twimg.com/images/themes/theme1/bg.png","statuses_count":579,"friends_count":110,"following":null,"show_all_inline_media":false,"screen_name":"sean_cummings"},"in_reply_to_screen_name":null,"source":"<a href=\"//itunes.apple.com/us/app/twitter/id409789998?mt=12%5C%22\" rel=\"\\\"nofollow\\\"\">Twitter for Mac</a>","in_reply_to_status_id":null},{"coordinates":null,"favorited":false,"truncated":false,"created_at":"Fri Sep 21 23:40:54 +0000 2012","id_str":"249292149810667520","entities":{"urls":[],"hashtags":[{"text":"FreeBandNames","indices":[20,34]}],"user_mentions":[]},"in_reply_to_user_id_str":null,"contributors":null,"text":"Thee Namaste Nerdz. #FreeBandNames","metadata":{"iso_language_code":"pl","result_type":"recent"},"retweet_count":0,"in_reply_to_status_id_str":null,"id":249292149810667520,"geo":null,"retweeted":false,"in_reply_to_user_id":null,"place":null,"user":{"profile_sidebar_fill_color":"DDFFCC","profile_sidebar_border_color":"BDDCAD","profile_background_tile":true,"name":"Chaz Martenstein","profile_image_url":"https://a0.twimg.com/profile_images/447958234/Lichtenstein_normal.jpg","created_at":"Tue Apr 07 19:05:07 +0000 2009","location":"Durham, NC","follow_request_sent":null,"profile_link_color":"0084B4","is_translator":false,"id_str":"29516238","entities":{"url":{"urls":[{"expanded_url":null,"url":"https://bullcityrecords.com/wnng/","indices":[0,32]}]},"description":{"urls":[]}},"default_profile":false,"contributors_enabled":false,"favourites_count":8,"url":"https://bullcityrecords.com/wnng/","profile_image_url_https":"https://si0.twimg.com/profile_images/447958234/Lichtenstein_normal.jpg","utc_offset":-18000,"id":29516238,"profile_use_background_image":true,"listed_count":118,"profile_text_color":"333333","lang":"en","followers_count":2052,"protected":false,"notifications":null,"profile_background_image_url_https":"https://si0.twimg.com/profile_background_images/9423277/background_tile.bmp","profile_background_color":"9AE4E8","verified":false,"geo_enabled":false,"time_zone":"Eastern Time (US & Canada)","description":"You will come to Durham, North Carolina. I will sell you some records then, here in Durham, North Carolina. Fun will happen.","default_profile_image":false,"profile_background_image_url":"https://a0.twimg.com/profile_background_images/9423277/background_tile.bmp","statuses_count":7579,"friends_count":348,"following":null,"show_all_inline_media":true,"screen_name":"bullcityrecords"},"in_reply_to_screen_name":null,"source":"web","in_reply_to_status_id":null},{"coordinates":null,"favorited":false,"truncated":false,"created_at":"Fri Sep 21 23:30:20 +0000 2012","id_str":"249289491129438208","entities":{"urls":[],"hashtags":[{"text":"freebandnames","indices":[29,43]}],"user_mentions":[]},"in_reply_to_user_id_str":null,"contributors":null,"text":"Mexican Heaven, Mexican Hell #freebandnames","metadata":{"iso_language_code":"en","result_type":"recent"},"retweet_count":0,"in_reply_to_status_id_str":null,"id":249289491129438208,"geo":null,"retweeted":false,"in_reply_to_user_id":null,"place":null,"user":{"profile_sidebar_fill_color":"99CC33","profile_sidebar_border_color":"829D5E","profile_background_tile":false,"name":"Thomas John Wakeman","profile_image_url":"https://a0.twimg.com/profile_images/2219333930/Froggystyle_normal.png","created_at":"Tue Sep 01 21:21:35 +0000 2009","location":"Kingston New York","follow_request_sent":null,"profile_link_color":"D02B55","is_translator":false,"id_str":"70789458","entities":{"url":{"urls":[{"expanded_url":null,"url":"","indices":[0,0]}]},"description":{"urls":[]}},"default_profile":false,"contributors_enabled":false,"favourites_count":19,"url":null,"profile_image_url_https":"https://si0.twimg.com/profile_images/2219333930/Froggystyle_normal.png","utc_offset":-18000,"id":70789458,"profile_use_background_image":true,"listed_count":1,"profile_text_color":"3E4415","lang":"en","followers_count":63,"protected":false,"notifications":null,"profile_background_image_url_https":"https://si0.twimg.com/images/themes/theme5/bg.gif","profile_background_color":"352726","verified":false,"geo_enabled":false,"time_zone":"Eastern Time (US & Canada)","description":"Science Fiction Writer, sort of. Likes Superheroes, Mole People, Alt. Timelines.","default_profile_image":false,"profile_background_image_url":"https://a0.twimg.com/images/themes/theme5/bg.gif","statuses_count":1048,"friends_count":63,"following":null,"show_all_inline_media":false,"screen_name":"MonkiesFist"},"in_reply_to_screen_name":null,"source":"web","in_reply_to_status_id":null},{"coordinates":null,"favorited":false,"truncated":false,"created_at":"Fri Sep 21 22:51:18 +0000 2012","id_str":"249279667666817024","entities":{"urls":[],"hashtags":[{"text":"freebandnames","indices":[20,34]}],"user_mentions":[]},"in_reply_to_user_id_str":null,"contributors":null,"text":"The Foolish Mortals #freebandnames","metadata":{"iso_language_code":"en","result_type":"recent"},"retweet_count":0,"in_reply_to_status_id_str":null,"id":249279667666817024,"geo":null,"retweeted":false,"in_reply_to_user_id":null,"place":null,"user":{"profile_sidebar_fill_color":"BFAC83","profile_sidebar_border_color":"615A44","profile_background_tile":true,"name":"Marty Elmer","profile_image_url":"https://a0.twimg.com/profile_images/1629790393/shrinker_2000_trans_normal.png","created_at":"Mon May 04 00:05:00 +0000 2009","location":"Wisconsin, USA","follow_request_sent":null,"profile_link_color":"3B2A26","is_translator":false,"id_str":"37539828","entities":{"url":{"urls":[{"expanded_url":null,"url":"https://www.omnitarian.me","indices":[0,24]}]},"description":{"urls":[]}},"default_profile":false,"contributors_enabled":false,"favourites_count":647,"url":"https://www.omnitarian.me","profile_image_url_https":"https://si0.twimg.com/profile_images/1629790393/shrinker_2000_trans_normal.png","utc_offset":-21600,"id":37539828,"profile_use_background_image":true,"listed_count":52,"profile_text_color":"000000","lang":"en","followers_count":608,"protected":false,"notifications":null,"profile_background_image_url_https":"https://si0.twimg.com/profile_background_images/106455659/rect6056-9.png","profile_background_color":"EEE3C4","verified":false,"geo_enabled":false,"time_zone":"Central Time (US & Canada)","description":"Cartoonist, Illustrator, and T-Shirt connoisseur","default_profile_image":false,"profile_background_image_url":"https://a0.twimg.com/profile_background_images/106455659/rect6056-9.png","statuses_count":3575,"friends_count":249,"following":null,"show_all_inline_media":true,"screen_name":"Omnitarian"},"in_reply_to_screen_name":null,"source":"<a href=\"//twitter.com/download/iphone%5C%22\" rel=\"\\\"nofollow\\\"\">Twitter for iPhone</a>","in_reply_to_status_id":null}],"search_metadata":{"max_id":250126199840518145,"since_id":24012619984051000,"refresh_url":"?since_id=250126199840518145&q=%23freebandnames&result_type=mixed&include_entities=1","next_results":"?max_id=249279667666817023&q=%23freebandnames&count=4&include_entities=1&result_type=mixed","count":4,"completed_in":0.035,"since_id_str":"24012619984051000","query":"%23freebandnames","max_id_str":"250126199840518145"}}
#8 18.85 --- PASS: TestEncoder_Binding (0.02s)
#8 18.85 === RUN   TestEncoder_MapSortKey
#8 18.85 --- PASS: TestEncoder_MapSortKey (0.00s)
#8 18.85 === RUN   TestOmitZero
#8 18.85 --- PASS: TestOmitZero (0.01s)
#8 18.85 === RUN   TestOmitZeroMap
#8 18.85 --- PASS: TestOmitZeroMap (0.02s)
#8 18.85 === RUN   TestOmitEmptyZero
#8 18.85 --- PASS: TestOmitEmptyZero (0.01s)
#8 18.85 === RUN   TestEncodeStream
#8 18.85 --- PASS: TestEncodeStream (0.00s)
#8 18.85 PASS
#8 18.85 ok  	github.com/bytedance/sonic/internal/encoder	0.800s
#8 18.85 === RUN   TestSort_SortRandomKeys
#8 18.85 --- PASS: TestSort_SortRandomKeys (0.00s)
#8 18.85 PASS
#8 18.85 ok  	github.com/bytedance/sonic/internal/encoder/alg	0.005s
#8 18.85 ?   	github.com/bytedance/sonic/internal/encoder/ir	[no test files]
#8 18.85 ?   	github.com/bytedance/sonic/internal/encoder/vars	[no test files]
#8 18.85 Begin GC looping...
#8 18.85 === RUN   TestEncoder_FieldStringize
#8 18.85 {"x":"12345","y":[1,2,3],"z":"4567456","w":"\"asdf\""}
#8 18.85 --- PASS: TestEncoder_FieldStringize (0.00s)
#8 18.85 === RUN   TestCorpusMarshal
#8 18.85 --- PASS: TestCorpusMarshal (0.00s)
#8 18.85 PASS
#8 18.85 ok  	github.com/bytedance/sonic/internal/encoder/vm	0.009s
#8 18.85 === RUN   TestAssembler_CompileAndLoad
#8 18.85 8
#8 18.85 00000000  74 72 75 65                                       |true|
#8 18.85 
#8 18.85 8
#8 18.85 00000000  66 61 6c 73 65                                    |false|
#8 18.85 
#8 18.85 8
#8 18.85 00000000  6e 75 6c 6c                                       |null|
#8 18.85 
#8 18.85 --- PASS: TestAssembler_CompileAndLoad (0.00s)
#8 18.85 === RUN   TestAssembler_OpCode
#8 18.85 === RUN   TestAssembler_OpCode/_OP_null
#8 18.85 === RUN   TestAssembler_OpCode/_OP_bool/true
#8 18.85 === RUN   TestAssembler_OpCode/_OP_bool/false
#8 18.85 === RUN   TestAssembler_OpCode/_OP_i8
#8 18.85 === RUN   TestAssembler_OpCode/_OP_i16
#8 18.85 === RUN   TestAssembler_OpCode/_OP_i32
#8 18.85 === RUN   TestAssembler_OpCode/_OP_i64
#8 18.85 === RUN   TestAssembler_OpCode/_OP_u8
#8 18.85 === RUN   TestAssembler_OpCode/_OP_u16
#8 18.85 === RUN   TestAssembler_OpCode/_OP_u32
#8 18.85 === RUN   TestAssembler_OpCode/_OP_u64
#8 18.85 === RUN   TestAssembler_OpCode/_OP_f32
#8 18.85 === RUN   TestAssembler_OpCode/_OP_f32/nan
#8 18.85 === RUN   TestAssembler_OpCode/_OP_f32/+inf
#8 18.85 === RUN   TestAssembler_OpCode/_OP_f32/-inf
#8 18.85 === RUN   TestAssembler_OpCode/_OP_f64
#8 18.85 === RUN   TestAssembler_OpCode/_OP_f64/nan
#8 18.85 === RUN   TestAssembler_OpCode/_OP_f64/+inf
#8 18.85 === RUN   TestAssembler_OpCode/_OP_f64/-inf
#8 18.85 === RUN   TestAssembler_OpCode/_OP_str
#8 18.85 === RUN   TestAssembler_OpCode/_OP_str/empty
#8 18.85 === RUN   TestAssembler_OpCode/_OP_bin
#8 18.85 === RUN   TestAssembler_OpCode/_OP_bin/empty
#8 18.85 === RUN   TestAssembler_OpCode/_OP_quote
#8 18.85 === RUN   TestAssembler_OpCode/_OP_quote/escape
#8 18.85 === RUN   TestAssembler_OpCode/_OP_number
#8 18.85 === RUN   TestAssembler_OpCode/_OP_number/invalid
#8 18.85 === RUN   TestAssembler_OpCode/_OP_eface
#8 18.85 === RUN   TestAssembler_OpCode/_OP_iface
#8 18.85 === RUN   TestAssembler_OpCode/_OP_byte
#8 18.85 === RUN   TestAssembler_OpCode/_OP_text
#8 18.85 === RUN   TestAssembler_OpCode/_OP_map_[iter,next,value]
#8 18.85 === RUN   TestAssembler_OpCode/_OP_slice_[len,next]
#8 18.85 === RUN   TestAssembler_OpCode/_OP_marshal[_text]
#8 18.85 === RUN   TestAssembler_OpCode/_OP_marshal[_text]/ptr
#8 18.85 === RUN   TestAssembler_OpCode/_OP_marshal[_text]/iface_v
#8 18.85 === RUN   TestAssembler_OpCode/_OP_marshal[_text]/iface_p
#8 18.85 === RUN   TestAssembler_OpCode/_OP_recurse
#8 18.85 --- PASS: TestAssembler_OpCode (0.02s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_null (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_bool/true (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_bool/false (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_i8 (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_i16 (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_i32 (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_i64 (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_u8 (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_u16 (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_u32 (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_u64 (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_f32 (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_f32/nan (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_f32/+inf (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_f32/-inf (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_f64 (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_f64/nan (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_f64/+inf (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_f64/-inf (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_str (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_str/empty (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_bin (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_bin/empty (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_quote (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_quote/escape (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_number (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_number/invalid (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_eface (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_iface (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_byte (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_text (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_map_[iter,next,value] (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_slice_[len,next] (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_marshal[_text] (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_marshal[_text]/ptr (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_marshal[_text]/iface_v (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_marshal[_text]/iface_p (0.00s)
#8 18.85     --- PASS: TestAssembler_OpCode/_OP_recurse (0.00s)
#8 18.85 === RUN   TestAssembler_StringMoreSpace
#8 18.85 ([]uint8) (len=86 cap=96) {
#8 18.85  00000000  22 5c 75 30 30 30 31 5c  75 30 30 30 32 5c 75 30  |"\u0001\u0002\u0|
#8 18.85  00000010  30 30 33 5c 75 30 30 30  34 5c 75 30 30 30 35 5c  |003\u0004\u0005\|
#8 18.85  00000020  75 30 30 30 36 5c 75 30  30 30 37 5c 75 30 30 30  |u0006\u0007\u000|
#8 18.85  00000030  38 5c 74 5c 6e 5c 75 30  30 30 62 5c 75 30 30 30  |8\t\n\u000b\u000|
#8 18.85  00000040  63 5c 72 5c 75 30 30 30  65 5c 75 30 30 30 66 5c  |c\r\u000e\u000f\|
#8 18.85  00000050  75 30 30 31 30 22                                 |u0010"|
#8 18.85 }
#8 18.85 --- PASS: TestAssembler_StringMoreSpace (0.00s)
#8 18.85 PASS
#8 18.85 ok  	github.com/bytedance/sonic/internal/encoder/x86	0.033s
#8 18.85 ?   	github.com/bytedance/sonic/internal/envs	[no test files]
#8 18.85 === RUN   TestBackend
#8 18.85 ([]uint8) (len=5 cap=5) {
#8 18.85  00000000  c4 e2 7d 17 ca                                    |..}..|
#8 18.85 }
#8 18.85 --- PASS: TestBackend (0.00s)
#8 18.85 PASS
#8 18.85 ok  	github.com/bytedance/sonic/internal/jit	0.006s
#8 18.85 ?   	github.com/bytedance/sonic/internal/native	[no test files]
#8 20.13 Begin GC looping...
#8 20.13 === RUN   TestFastFloat_Encode
#8 20.13 --- PASS: TestFastFloat_Encode (0.00s)
#8 20.13 === RUN   TestFastFloat_Random
#8 20.13 --- PASS: TestFastFloat_Random (0.04s)
#8 20.13 === RUN   TestFastInt_IntToString
#8 20.13 --- PASS: TestFastInt_IntToString (0.00s)
#8 20.13 === RUN   TestFastInt_UintToString
#8 20.13 --- PASS: TestFastInt_UintToString (0.00s)
#8 20.13 === RUN   TestNative_Value
#8 20.13 --- PASS: TestNative_Value (0.00s)
#8 20.13 === RUN   TestNative_Value_OutOfBound
#8 20.13 --- PASS: TestNative_Value_OutOfBound (0.00s)
#8 20.13 === RUN   TestNative_Quote
#8 20.13 --- PASS: TestNative_Quote (0.00s)
#8 20.13 === RUN   TestNative_QuoteNoMem
#8 20.13 --- PASS: TestNative_QuoteNoMem (0.00s)
#8 20.13 === RUN   TestNative_DoubleQuote
#8 20.13 --- PASS: TestNative_DoubleQuote (0.00s)
#8 20.13 === RUN   TestNative_Unquote
#8 20.13 --- PASS: TestNative_Unquote (0.00s)
#8 20.13 === RUN   TestNative_UnquoteError
#8 20.13 --- PASS: TestNative_UnquoteError (0.00s)
#8 20.13 === RUN   TestNative_DoubleUnquote
#8 20.13 --- PASS: TestNative_DoubleUnquote (0.00s)
#8 20.13 === RUN   TestNative_UnquoteUnicodeReplacement
#8 20.13 --- PASS: TestNative_UnquoteUnicodeReplacement (0.00s)
#8 20.13 === RUN   TestNative_HTMLEscape
#8 20.13 --- PASS: TestNative_HTMLEscape (0.00s)
#8 20.13 === RUN   TestNative_HTMLEscapeNoMem
#8 20.13 --- PASS: TestNative_HTMLEscapeNoMem (0.00s)
#8 20.13 === RUN   TestNative_Vstring
#8 20.13 --- PASS: TestNative_Vstring (0.00s)
#8 20.13 === RUN   TestNative_Vstring_ValidUnescapedChars
#8 20.13 --- PASS: TestNative_Vstring_ValidUnescapedChars (0.00s)
#8 20.13 === RUN   TestNative_VstringEscapeEOF
#8 20.13 --- PASS: TestNative_VstringEscapeEOF (0.00s)
#8 20.13 === RUN   TestNative_VstringHangUpOnRandomData
#8 20.13 js: (types.JsonState) {
#8 20.13  Vt: (int64) -1,
#8 20.13  Dv: (float64) 0,
#8 20.13  Iv: (int64) 0,
#8 20.13  Ep: (int) 0,
#8 20.13  Dbuf: (*uint8)(<nil>),
#8 20.13  Dcap: (int) 0
#8 20.13 }
#8 20.13 
#8 20.13 --- PASS: TestNative_VstringHangUpOnRandomData (0.00s)
#8 20.13 === RUN   TestNative_Vnumber
#8 20.13 --- PASS: TestNative_Vnumber (0.00s)
#8 20.13 === RUN   TestNative_Vsigned
#8 20.13 --- PASS: TestNative_Vsigned (0.00s)
#8 20.13 === RUN   TestNative_Vunsigned
#8 20.13 --- PASS: TestNative_Vunsigned (0.00s)
#8 20.13 === RUN   TestNative_SkipOne
#8 20.13 --- PASS: TestNative_SkipOne (0.00s)
#8 20.13 === RUN   TestNative_SkipOne_Error
#8 20.13 --- PASS: TestNative_SkipOne_Error (0.00s)
#8 20.13 === RUN   TestNative_SkipArray
#8 20.13 --- PASS: TestNative_SkipArray (0.00s)
#8 20.13 === RUN   TestNative_SkipObject
#8 20.13 --- PASS: TestNative_SkipObject (0.00s)
#8 20.13 === RUN   TestNative_SkipNumber
#8 20.13 --- PASS: TestNative_SkipNumber (0.00s)
#8 20.13 === RUN   TestNative_SkipNumberInJson
#8 20.13 --- PASS: TestNative_SkipNumberInJson (0.00s)
#8 20.13 === RUN   TestNative_SkipOneFast
#8 20.13 --- PASS: TestNative_SkipOneFast (0.00s)
#8 20.13 === RUN   TestNative_SkipOneFast_Error
#8 20.13 --- PASS: TestNative_SkipOneFast_Error (0.00s)
#8 20.13 === RUN   TestNative_GetByPath
#8 20.13 --- PASS: TestNative_GetByPath (0.00s)
#8 20.13 === RUN   TestRecover_f64toa
#8 20.13     recover_test.go:64: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_f64toa (0.00s)
#8 20.13 === RUN   TestRecover_f32toa
#8 20.13     recover_test.go:75: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_f32toa (0.00s)
#8 20.13 === RUN   TestRecover_i64toa
#8 20.13     recover_test.go:86: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_i64toa (0.00s)
#8 20.13 === RUN   TestRecover_u64toa
#8 20.13     recover_test.go:97: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_u64toa (0.00s)
#8 20.13 === RUN   TestRecover_lspace
#8 20.13     recover_test.go:108: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_lspace (0.00s)
#8 20.13 === RUN   TestRecover_lspace2
#8 20.13 --- PASS: TestRecover_lspace2 (0.61s)
#8 20.13 === RUN   TestRecover_quote
#8 20.13 === RUN   TestRecover_quote/sp
#8 20.13     recover_test.go:140: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_quote/dp
#8 20.13     recover_test.go:150: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_quote/dn
#8 20.13     recover_test.go:160: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_quote (0.00s)
#8 20.13     --- PASS: TestRecover_quote/sp (0.00s)
#8 20.13     --- PASS: TestRecover_quote/dp (0.00s)
#8 20.13     --- PASS: TestRecover_quote/dn (0.00s)
#8 20.13 === RUN   TestRecover_html_escape
#8 20.13 === RUN   TestRecover_html_escape/sp
#8 20.13     recover_test.go:176: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_html_escape/dp
#8 20.13     recover_test.go:186: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_html_escape/dn
#8 20.13     recover_test.go:196: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_html_escape (0.00s)
#8 20.13     --- PASS: TestRecover_html_escape/sp (0.00s)
#8 20.13     --- PASS: TestRecover_html_escape/dp (0.00s)
#8 20.13     --- PASS: TestRecover_html_escape/dn (0.00s)
#8 20.13 === RUN   TestRecover_unquote
#8 20.13 === RUN   TestRecover_unquote/sp
#8 20.13     recover_test.go:212: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_unquote/dp
#8 20.13     recover_test.go:222: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_unquote/ep
#8 20.13     recover_test.go:232: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_unquote (0.00s)
#8 20.13     --- PASS: TestRecover_unquote/sp (0.00s)
#8 20.13     --- PASS: TestRecover_unquote/dp (0.00s)
#8 20.13     --- PASS: TestRecover_unquote/ep (0.00s)
#8 20.13 === RUN   TestRecover_value
#8 20.13 === RUN   TestRecover_value/sp
#8 20.13     recover_test.go:247: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_value/v
#8 20.13     recover_test.go:257: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_value (0.00s)
#8 20.13     --- PASS: TestRecover_value/sp (0.00s)
#8 20.13     --- PASS: TestRecover_value/v (0.00s)
#8 20.13 === RUN   TestRecover_vstring
#8 20.13 === RUN   TestRecover_vstring/sp
#8 20.13     recover_test.go:273: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_vstring/p
#8 20.13     recover_test.go:283: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_vstring/v
#8 20.13     recover_test.go:293: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_vstring (0.00s)
#8 20.13     --- PASS: TestRecover_vstring/sp (0.00s)
#8 20.13     --- PASS: TestRecover_vstring/p (0.00s)
#8 20.13     --- PASS: TestRecover_vstring/v (0.00s)
#8 20.13 === RUN   TestRecover_vnumber
#8 20.13 === RUN   TestRecover_vnumber/sp
#8 20.13     recover_test.go:309: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_vnumber/p
#8 20.13     recover_test.go:319: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_vnumber/v
#8 20.13     recover_test.go:329: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_vnumber (0.00s)
#8 20.13     --- PASS: TestRecover_vnumber/sp (0.00s)
#8 20.13     --- PASS: TestRecover_vnumber/p (0.00s)
#8 20.13     --- PASS: TestRecover_vnumber/v (0.00s)
#8 20.13 === RUN   TestRecover_vsigned
#8 20.13 === RUN   TestRecover_vsigned/sp
#8 20.13     recover_test.go:345: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_vsigned/p
#8 20.13     recover_test.go:355: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_vsigned/v
#8 20.13     recover_test.go:365: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_vsigned (0.00s)
#8 20.13     --- PASS: TestRecover_vsigned/sp (0.00s)
#8 20.13     --- PASS: TestRecover_vsigned/p (0.00s)
#8 20.13     --- PASS: TestRecover_vsigned/v (0.00s)
#8 20.13 === RUN   TestRecover_vunsigned
#8 20.13 === RUN   TestRecover_vunsigned/sp
#8 20.13     recover_test.go:381: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_vunsigned/p
#8 20.13     recover_test.go:391: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_vunsigned/v
#8 20.13     recover_test.go:401: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_vunsigned (0.00s)
#8 20.13     --- PASS: TestRecover_vunsigned/sp (0.00s)
#8 20.13     --- PASS: TestRecover_vunsigned/p (0.00s)
#8 20.13     --- PASS: TestRecover_vunsigned/v (0.00s)
#8 20.13 === RUN   TestRecover_skip_one
#8 20.13 === RUN   TestRecover_skip_one/sp
#8 20.13     recover_test.go:417: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_skip_one/p
#8 20.13     recover_test.go:427: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_skip_one/v
#8 20.13     recover_test.go:437: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_skip_one (0.00s)
#8 20.13     --- PASS: TestRecover_skip_one/sp (0.00s)
#8 20.13     --- PASS: TestRecover_skip_one/p (0.00s)
#8 20.13     --- PASS: TestRecover_skip_one/v (0.00s)
#8 20.13 === RUN   TestRecover_skip_one_fast
#8 20.13 === RUN   TestRecover_skip_one_fast/sp
#8 20.13     recover_test.go:452: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_skip_one_fast/p
#8 20.13     recover_test.go:462: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_skip_one_fast (0.00s)
#8 20.13     --- PASS: TestRecover_skip_one_fast/sp (0.00s)
#8 20.13     --- PASS: TestRecover_skip_one_fast/p (0.00s)
#8 20.13 === RUN   TestRecover_skip_array
#8 20.13 === RUN   TestRecover_skip_array/sp
#8 20.13     recover_test.go:478: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_skip_array/p
#8 20.13     recover_test.go:488: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_skip_array/v
#8 20.13     recover_test.go:498: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_skip_array (0.00s)
#8 20.13     --- PASS: TestRecover_skip_array/sp (0.00s)
#8 20.13     --- PASS: TestRecover_skip_array/p (0.00s)
#8 20.13     --- PASS: TestRecover_skip_array/v (0.00s)
#8 20.13 === RUN   TestRecover_skip_object
#8 20.13 === RUN   TestRecover_skip_object/sp
#8 20.13     recover_test.go:514: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_skip_object/p
#8 20.13     recover_test.go:524: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_skip_object/v
#8 20.13     recover_test.go:534: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_skip_object (0.00s)
#8 20.13     --- PASS: TestRecover_skip_object/sp (0.00s)
#8 20.13     --- PASS: TestRecover_skip_object/p (0.00s)
#8 20.13     --- PASS: TestRecover_skip_object/v (0.00s)
#8 20.13 === RUN   TestRecover_skip_number
#8 20.13 === RUN   TestRecover_skip_number/sp
#8 20.13     recover_test.go:549: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_skip_number/p
#8 20.13     recover_test.go:559: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_skip_number (0.00s)
#8 20.13     --- PASS: TestRecover_skip_number/sp (0.00s)
#8 20.13     --- PASS: TestRecover_skip_number/p (0.00s)
#8 20.13 === RUN   TestRecover_get_by_path
#8 20.13 === RUN   TestRecover_get_by_path/sp
#8 20.13     recover_test.go:576: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_get_by_path/p
#8 20.13     recover_test.go:586: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_get_by_path/path
#8 20.13     recover_test.go:596: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_get_by_path (0.00s)
#8 20.13     --- PASS: TestRecover_get_by_path/sp (0.00s)
#8 20.13     --- PASS: TestRecover_get_by_path/p (0.00s)
#8 20.13     --- PASS: TestRecover_get_by_path/path (0.00s)
#8 20.13 === RUN   TestRecover_validate_one
#8 20.13 === RUN   TestRecover_validate_one/sp
#8 20.13     recover_test.go:612: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_validate_one/p
#8 20.13     recover_test.go:622: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_validate_one/v
#8 20.13     recover_test.go:632: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_validate_one (0.00s)
#8 20.13     --- PASS: TestRecover_validate_one/sp (0.00s)
#8 20.13     --- PASS: TestRecover_validate_one/p (0.00s)
#8 20.13     --- PASS: TestRecover_validate_one/v (0.00s)
#8 20.13 === RUN   TestRecover_validate_utf8
#8 20.13 === RUN   TestRecover_validate_utf8/sp
#8 20.13     recover_test.go:648: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_validate_utf8/p
#8 20.13     recover_test.go:658: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_validate_utf8/v
#8 20.13     recover_test.go:668: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_validate_utf8 (0.00s)
#8 20.13     --- PASS: TestRecover_validate_utf8/sp (0.00s)
#8 20.13     --- PASS: TestRecover_validate_utf8/p (0.00s)
#8 20.13     --- PASS: TestRecover_validate_utf8/v (0.00s)
#8 20.13 === RUN   TestRecover_validate_utf8_fast
#8 20.13     recover_test.go:680: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_validate_utf8_fast (0.00s)
#8 20.13 === RUN   TestRecover_parse_with_padding
#8 20.13     recover_test.go:691: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_parse_with_padding (0.00s)
#8 20.13 === RUN   TestRecover_lookup_small_key
#8 20.13 === RUN   TestRecover_lookup_small_key/key
#8 20.13     recover_test.go:703: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 === RUN   TestRecover_lookup_small_key/table
#8 20.13     recover_test.go:714: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.13 --- PASS: TestRecover_lookup_small_key (0.00s)
#8 20.13     --- PASS: TestRecover_lookup_small_key/key (0.00s)
#8 20.13     --- PASS: TestRecover_lookup_small_key/table (0.00s)
#8 20.13 PASS
#8 20.13 ok  	github.com/bytedance/sonic/internal/native/avx2	0.762s
#8 20.24 Begin GC looping...
#8 20.24 === RUN   TestFastFloat_Encode
#8 20.24 --- PASS: TestFastFloat_Encode (0.00s)
#8 20.24 === RUN   TestFastFloat_Random
#8 20.24 --- PASS: TestFastFloat_Random (0.04s)
#8 20.24 === RUN   TestFastInt_IntToString
#8 20.24 --- PASS: TestFastInt_IntToString (0.00s)
#8 20.24 === RUN   TestFastInt_UintToString
#8 20.24 --- PASS: TestFastInt_UintToString (0.00s)
#8 20.24 === RUN   TestNative_Value
#8 20.24 --- PASS: TestNative_Value (0.00s)
#8 20.24 === RUN   TestNative_Value_OutOfBound
#8 20.24 --- PASS: TestNative_Value_OutOfBound (0.00s)
#8 20.24 === RUN   TestNative_Quote
#8 20.24 --- PASS: TestNative_Quote (0.00s)
#8 20.24 === RUN   TestNative_QuoteNoMem
#8 20.24 --- PASS: TestNative_QuoteNoMem (0.00s)
#8 20.24 === RUN   TestNative_DoubleQuote
#8 20.24 --- PASS: TestNative_DoubleQuote (0.00s)
#8 20.24 === RUN   TestNative_Unquote
#8 20.24 --- PASS: TestNative_Unquote (0.00s)
#8 20.24 === RUN   TestNative_UnquoteError
#8 20.24 --- PASS: TestNative_UnquoteError (0.00s)
#8 20.24 === RUN   TestNative_DoubleUnquote
#8 20.24 --- PASS: TestNative_DoubleUnquote (0.00s)
#8 20.24 === RUN   TestNative_UnquoteUnicodeReplacement
#8 20.24 --- PASS: TestNative_UnquoteUnicodeReplacement (0.00s)
#8 20.24 === RUN   TestNative_HTMLEscape
#8 20.24 --- PASS: TestNative_HTMLEscape (0.00s)
#8 20.24 === RUN   TestNative_HTMLEscapeNoMem
#8 20.24 --- PASS: TestNative_HTMLEscapeNoMem (0.00s)
#8 20.24 === RUN   TestNative_Vstring
#8 20.24 --- PASS: TestNative_Vstring (0.00s)
#8 20.24 === RUN   TestNative_Vstring_ValidUnescapedChars
#8 20.24 --- PASS: TestNative_Vstring_ValidUnescapedChars (0.00s)
#8 20.24 === RUN   TestNative_VstringEscapeEOF
#8 20.24 --- PASS: TestNative_VstringEscapeEOF (0.00s)
#8 20.24 === RUN   TestNative_VstringHangUpOnRandomData
#8 20.24 js: (types.JsonState) {
#8 20.24  Vt: (int64) -1,
#8 20.24  Dv: (float64) 0,
#8 20.24  Iv: (int64) 0,
#8 20.24  Ep: (int) 0,
#8 20.24  Dbuf: (*uint8)(<nil>),
#8 20.24  Dcap: (int) 0
#8 20.24 }
#8 20.24 
#8 20.24 --- PASS: TestNative_VstringHangUpOnRandomData (0.00s)
#8 20.24 === RUN   TestNative_Vnumber
#8 20.24 --- PASS: TestNative_Vnumber (0.00s)
#8 20.24 === RUN   TestNative_Vsigned
#8 20.24 --- PASS: TestNative_Vsigned (0.00s)
#8 20.24 === RUN   TestNative_Vunsigned
#8 20.24 --- PASS: TestNative_Vunsigned (0.00s)
#8 20.24 === RUN   TestNative_SkipOne
#8 20.24 --- PASS: TestNative_SkipOne (0.00s)
#8 20.24 === RUN   TestNative_SkipOne_Error
#8 20.24 --- PASS: TestNative_SkipOne_Error (0.00s)
#8 20.24 === RUN   TestNative_SkipArray
#8 20.24 --- PASS: TestNative_SkipArray (0.00s)
#8 20.24 === RUN   TestNative_SkipObject
#8 20.24 --- PASS: TestNative_SkipObject (0.00s)
#8 20.24 === RUN   TestNative_SkipNumber
#8 20.24 --- PASS: TestNative_SkipNumber (0.00s)
#8 20.24 === RUN   TestNative_SkipNumberInJson
#8 20.24 --- PASS: TestNative_SkipNumberInJson (0.00s)
#8 20.24 === RUN   TestNative_SkipOneFast
#8 20.24 --- PASS: TestNative_SkipOneFast (0.00s)
#8 20.24 === RUN   TestNative_SkipOneFast_Error
#8 20.24 --- PASS: TestNative_SkipOneFast_Error (0.00s)
#8 20.24 === RUN   TestNative_GetByPath
#8 20.24 --- PASS: TestNative_GetByPath (0.00s)
#8 20.24 === RUN   TestRecover_f64toa
#8 20.24     recover_test.go:64: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_f64toa (0.00s)
#8 20.24 === RUN   TestRecover_f32toa
#8 20.24     recover_test.go:75: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_f32toa (0.00s)
#8 20.24 === RUN   TestRecover_i64toa
#8 20.24     recover_test.go:86: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_i64toa (0.00s)
#8 20.24 === RUN   TestRecover_u64toa
#8 20.24     recover_test.go:97: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_u64toa (0.00s)
#8 20.24 === RUN   TestRecover_lspace
#8 20.24     recover_test.go:108: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_lspace (0.00s)
#8 20.24 === RUN   TestRecover_lspace2
#8 20.24 --- PASS: TestRecover_lspace2 (0.51s)
#8 20.24 === RUN   TestRecover_quote
#8 20.24 === RUN   TestRecover_quote/sp
#8 20.24     recover_test.go:140: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_quote/dp
#8 20.24     recover_test.go:150: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_quote/dn
#8 20.24     recover_test.go:160: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_quote (0.00s)
#8 20.24     --- PASS: TestRecover_quote/sp (0.00s)
#8 20.24     --- PASS: TestRecover_quote/dp (0.00s)
#8 20.24     --- PASS: TestRecover_quote/dn (0.00s)
#8 20.24 === RUN   TestRecover_html_escape
#8 20.24 === RUN   TestRecover_html_escape/sp
#8 20.24     recover_test.go:176: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_html_escape/dp
#8 20.24     recover_test.go:186: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_html_escape/dn
#8 20.24     recover_test.go:196: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_html_escape (0.00s)
#8 20.24     --- PASS: TestRecover_html_escape/sp (0.00s)
#8 20.24     --- PASS: TestRecover_html_escape/dp (0.00s)
#8 20.24     --- PASS: TestRecover_html_escape/dn (0.00s)
#8 20.24 === RUN   TestRecover_unquote
#8 20.24 === RUN   TestRecover_unquote/sp
#8 20.24     recover_test.go:212: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_unquote/dp
#8 20.24     recover_test.go:222: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_unquote/ep
#8 20.24     recover_test.go:232: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_unquote (0.00s)
#8 20.24     --- PASS: TestRecover_unquote/sp (0.00s)
#8 20.24     --- PASS: TestRecover_unquote/dp (0.00s)
#8 20.24     --- PASS: TestRecover_unquote/ep (0.00s)
#8 20.24 === RUN   TestRecover_value
#8 20.24 === RUN   TestRecover_value/sp
#8 20.24     recover_test.go:247: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_value/v
#8 20.24     recover_test.go:257: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_value (0.00s)
#8 20.24     --- PASS: TestRecover_value/sp (0.00s)
#8 20.24     --- PASS: TestRecover_value/v (0.00s)
#8 20.24 === RUN   TestRecover_vstring
#8 20.24 === RUN   TestRecover_vstring/sp
#8 20.24     recover_test.go:273: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_vstring/p
#8 20.24     recover_test.go:283: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_vstring/v
#8 20.24     recover_test.go:293: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_vstring (0.00s)
#8 20.24     --- PASS: TestRecover_vstring/sp (0.00s)
#8 20.24     --- PASS: TestRecover_vstring/p (0.00s)
#8 20.24     --- PASS: TestRecover_vstring/v (0.00s)
#8 20.24 === RUN   TestRecover_vnumber
#8 20.24 === RUN   TestRecover_vnumber/sp
#8 20.24     recover_test.go:309: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_vnumber/p
#8 20.24     recover_test.go:319: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_vnumber/v
#8 20.24     recover_test.go:329: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_vnumber (0.00s)
#8 20.24     --- PASS: TestRecover_vnumber/sp (0.00s)
#8 20.24     --- PASS: TestRecover_vnumber/p (0.00s)
#8 20.24     --- PASS: TestRecover_vnumber/v (0.00s)
#8 20.24 === RUN   TestRecover_vsigned
#8 20.24 === RUN   TestRecover_vsigned/sp
#8 20.24     recover_test.go:345: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_vsigned/p
#8 20.24     recover_test.go:355: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_vsigned/v
#8 20.24     recover_test.go:365: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_vsigned (0.00s)
#8 20.24     --- PASS: TestRecover_vsigned/sp (0.00s)
#8 20.24     --- PASS: TestRecover_vsigned/p (0.00s)
#8 20.24     --- PASS: TestRecover_vsigned/v (0.00s)
#8 20.24 === RUN   TestRecover_vunsigned
#8 20.24 === RUN   TestRecover_vunsigned/sp
#8 20.24     recover_test.go:381: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_vunsigned/p
#8 20.24     recover_test.go:391: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_vunsigned/v
#8 20.24     recover_test.go:401: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_vunsigned (0.00s)
#8 20.24     --- PASS: TestRecover_vunsigned/sp (0.00s)
#8 20.24     --- PASS: TestRecover_vunsigned/p (0.00s)
#8 20.24     --- PASS: TestRecover_vunsigned/v (0.00s)
#8 20.24 === RUN   TestRecover_skip_one
#8 20.24 === RUN   TestRecover_skip_one/sp
#8 20.24     recover_test.go:417: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_skip_one/p
#8 20.24     recover_test.go:427: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_skip_one/v
#8 20.24     recover_test.go:437: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_skip_one (0.00s)
#8 20.24     --- PASS: TestRecover_skip_one/sp (0.00s)
#8 20.24     --- PASS: TestRecover_skip_one/p (0.00s)
#8 20.24     --- PASS: TestRecover_skip_one/v (0.00s)
#8 20.24 === RUN   TestRecover_skip_one_fast
#8 20.24 === RUN   TestRecover_skip_one_fast/sp
#8 20.24     recover_test.go:452: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_skip_one_fast/p
#8 20.24     recover_test.go:462: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_skip_one_fast (0.00s)
#8 20.24     --- PASS: TestRecover_skip_one_fast/sp (0.00s)
#8 20.24     --- PASS: TestRecover_skip_one_fast/p (0.00s)
#8 20.24 === RUN   TestRecover_skip_array
#8 20.24 === RUN   TestRecover_skip_array/sp
#8 20.24     recover_test.go:478: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_skip_array/p
#8 20.24     recover_test.go:488: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_skip_array/v
#8 20.24     recover_test.go:498: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_skip_array (0.00s)
#8 20.24     --- PASS: TestRecover_skip_array/sp (0.00s)
#8 20.24     --- PASS: TestRecover_skip_array/p (0.00s)
#8 20.24     --- PASS: TestRecover_skip_array/v (0.00s)
#8 20.24 === RUN   TestRecover_skip_object
#8 20.24 === RUN   TestRecover_skip_object/sp
#8 20.24     recover_test.go:514: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_skip_object/p
#8 20.24     recover_test.go:524: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_skip_object/v
#8 20.24     recover_test.go:534: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_skip_object (0.00s)
#8 20.24     --- PASS: TestRecover_skip_object/sp (0.00s)
#8 20.24     --- PASS: TestRecover_skip_object/p (0.00s)
#8 20.24     --- PASS: TestRecover_skip_object/v (0.00s)
#8 20.24 === RUN   TestRecover_skip_number
#8 20.24 === RUN   TestRecover_skip_number/sp
#8 20.24     recover_test.go:549: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_skip_number/p
#8 20.24     recover_test.go:559: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_skip_number (0.00s)
#8 20.24     --- PASS: TestRecover_skip_number/sp (0.00s)
#8 20.24     --- PASS: TestRecover_skip_number/p (0.00s)
#8 20.24 === RUN   TestRecover_get_by_path
#8 20.24 === RUN   TestRecover_get_by_path/sp
#8 20.24     recover_test.go:576: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_get_by_path/p
#8 20.24     recover_test.go:586: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_get_by_path/path
#8 20.24     recover_test.go:596: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_get_by_path (0.00s)
#8 20.24     --- PASS: TestRecover_get_by_path/sp (0.00s)
#8 20.24     --- PASS: TestRecover_get_by_path/p (0.00s)
#8 20.24     --- PASS: TestRecover_get_by_path/path (0.00s)
#8 20.24 === RUN   TestRecover_validate_one
#8 20.24 === RUN   TestRecover_validate_one/sp
#8 20.24     recover_test.go:612: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_validate_one/p
#8 20.24     recover_test.go:622: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_validate_one/v
#8 20.24     recover_test.go:632: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_validate_one (0.00s)
#8 20.24     --- PASS: TestRecover_validate_one/sp (0.00s)
#8 20.24     --- PASS: TestRecover_validate_one/p (0.00s)
#8 20.24     --- PASS: TestRecover_validate_one/v (0.00s)
#8 20.24 === RUN   TestRecover_validate_utf8
#8 20.24 === RUN   TestRecover_validate_utf8/sp
#8 20.24     recover_test.go:648: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_validate_utf8/p
#8 20.24     recover_test.go:658: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_validate_utf8/v
#8 20.24     recover_test.go:668: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_validate_utf8 (0.00s)
#8 20.24     --- PASS: TestRecover_validate_utf8/sp (0.00s)
#8 20.24     --- PASS: TestRecover_validate_utf8/p (0.00s)
#8 20.24     --- PASS: TestRecover_validate_utf8/v (0.00s)
#8 20.24 === RUN   TestRecover_validate_utf8_fast
#8 20.24     recover_test.go:680: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_validate_utf8_fast (0.00s)
#8 20.24 === RUN   TestRecover_parse_with_padding
#8 20.24     recover_test.go:691: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_parse_with_padding (0.00s)
#8 20.24 === RUN   TestRecover_lookup_small_key
#8 20.24 === RUN   TestRecover_lookup_small_key/key
#8 20.24     recover_test.go:703: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 === RUN   TestRecover_lookup_small_key/table
#8 20.24     recover_test.go:714: recover:  runtime error: invalid memory address or nil pointer dereference
#8 20.24 --- PASS: TestRecover_lookup_small_key (0.00s)
#8 20.24     --- PASS: TestRecover_lookup_small_key/key (0.00s)
#8 20.24     --- PASS: TestRecover_lookup_small_key/table (0.00s)
#8 20.24 PASS
#8 20.24 ok  	github.com/bytedance/sonic/internal/native/sse	0.671s
#8 20.24 ?   	github.com/bytedance/sonic/internal/native/types	[no test files]
#8 20.24 ?   	github.com/bytedance/sonic/internal/optcaching	[no test files]
#8 20.24 === RUN   TestResolver_ResolveStruct
#8 20.24 {Field "X" @ 0, opts=, type=int}
#8 20.24 {Field "ImportStack" @ 8.(*resolver.PackageError), opts=, type=[]string}
#8 20.24 {Field "Pos" @ 8.(*resolver.PackageError).24, opts=, type=string}
#8 20.24 {Field "Err" @ 8.(*resolver.PackageError).40, opts=, type=error}
#8 20.24 {Field "IsImportCycle" @ 8.(*resolver.PackageError).56, opts=, type=bool}
#8 20.24 {Field "Hard" @ 8.(*resolver.PackageError).57, opts=, type=bool}
#8 20.24 {Field "Y" @ 8.(*resolver.PackageError).64, opts=, type=*int}
#8 20.24 {Field "W" @ 40, opts=, type=int}
#8 20.24 --- PASS: TestResolver_ResolveStruct (0.00s)
#8 20.24 PASS
#8 20.24 ok  	github.com/bytedance/sonic/internal/resolver	0.005s
#8 20.24 === RUN   TestFastConvTSlice
#8 20.24 === RUN   TestFastConvTSlice/Empty
#8 20.24 (rt.GoSlice) {
#8 20.24  Ptr: (unsafe.Pointer) 0x8b94a0,
#8 20.24  Len: (int) 0,
#8 20.24  Cap: (int) 0
#8 20.24 }
#8 20.24 (*rt.GoSlice)(0xc0000106c0)({
#8 20.24  Ptr: (unsafe.Pointer) 0x8b94a0,
#8 20.24  Len: (int) 0,
#8 20.24  Cap: (int) 0
#8 20.24 })
#8 20.24 (rt.GoEface) {
#8 20.24  Type: (*rt.GoType)(0x622d40)([]string),
#8 20.24  Value: (unsafe.Pointer) 0xc0000106a8
#8 20.24 }
#8 20.24 === RUN   TestFastConvTSlice/Nil
#8 20.24 ([]string) <nil>
#8 20.24 ([]string) <nil>
#8 20.24 (rt.GoEface) {
#8 20.24  Type: (*rt.GoType)(0x622d40)([]string),
#8 20.24  Value: (unsafe.Pointer) 0x8bb780
#8 20.24 }
#8 20.24 === RUN   TestFastConvTSlice/Normal
#8 20.24 --- PASS: TestFastConvTSlice (0.00s)
#8 20.24     --- PASS: TestFastConvTSlice/Empty (0.00s)
#8 20.24     --- PASS: TestFastConvTSlice/Nil (0.00s)
#8 20.24     --- PASS: TestFastConvTSlice/Normal (0.00s)
#8 20.24 === RUN   TestFastConvTString
#8 20.24 === RUN   TestFastConvTString/Empty
#8 20.24 === RUN   TestFastConvTString/Normal
#8 20.24 --- PASS: TestFastConvTString (0.00s)
#8 20.24     --- PASS: TestFastConvTString/Empty (0.00s)
#8 20.24     --- PASS: TestFastConvTString/Normal (0.00s)
#8 20.24 === RUN   TestFastConvT64
#8 20.24 === RUN   TestFastConvT64/Small
#8 20.24 === RUN   TestFastConvT64/Normal
#8 20.24 --- PASS: TestFastConvT64 (0.00s)
#8 20.24     --- PASS: TestFastConvT64/Small (0.00s)
#8 20.24     --- PASS: TestFastConvT64/Normal (0.00s)
#8 20.24 === RUN   TestStubsMake
#8 20.24 === RUN   TestStubsMake/NonPtr
#8 20.24 === RUN   TestStubsMake/HasPtr
#8 20.24 --- PASS: TestStubsMake (0.01s)
#8 20.24     --- PASS: TestStubsMake/NonPtr (0.00s)
#8 20.24     --- PASS: TestStubsMake/HasPtr (0.00s)
#8 20.24 PASS
#8 20.24 ok  	github.com/bytedance/sonic/internal/rt	0.010s
#8 20.24 ?   	github.com/bytedance/sonic/internal/utils	[no test files]
#8 20.24 ?   	github.com/bytedance/sonic/option	[no test files]
#8 20.24 ?   	github.com/bytedance/sonic/unquote	[no test files]
#8 20.24 === RUN   TestCorrectWith_InvalidUtf8
#8 20.24 --- PASS: TestCorrectWith_InvalidUtf8 (0.00s)
#8 20.24 === RUN   TestValidate_Random
#8 20.24 --- PASS: TestValidate_Random (0.03s)
#8 20.24 PASS
#8 20.24 ok  	github.com/bytedance/sonic/utf8	0.032s
#8 DONE 20.5s

#9 exporting to image
#9 exporting layers
#9 exporting layers 2.7s done
#9 writing image sha256:79832663e0535a1e2702fcc2f856963ec47e75fce297d75bbe5b89053a34dc1d done
#9 naming to docker.io/jyangballin/swesmith.x86_64.bytedance_1776_sonic.de4f017f 0.0s done
#9 DONE 2.7s
